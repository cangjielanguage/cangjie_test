// Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
// This source file is part of the Cangjie project, licensed under Apache-2.0
// with Runtime Library Exception.
//
// See https://cangjie-lang.cn/pages/LICENSE for license information.

public let var_1689285846664_1783: Unit = ()
public let var_1689285846664_2649: Option<Array<Bool>> = Option<Array<Bool>>.None

public enum Enum_1689285846664_35 {
    defaultValue
    | ctor(S, UInt64)
}

public struct S {
    public init() { // block id: 10

    }

    private static let var_1689285846664_2282: Unit = ();

    public init(param_1689285846664_2111: Enum_1689285846664_35) { // block id: 2112
        if ((try { // block id: 2579
            [(), (), (), (), var_1689285846664_1783, [UInt64(115), UInt64(84)], (), (), (), ()]
        } finally { // block id: 2647
            ()
        } is Option<Option<Unit>>)) { // block id: 2652
            ();
        }
    };

    public let var_1689285846664_2904: Option<Enum_1689285846664_35> = Option<Enum_1689285846664_35>.None;
    public func func_1689285846664_241(): Bool { // block id: 253
        var_1689285846664_2904
        true
    };

    static var var_1689285846664_3014: Option<Range<Int16>> = Option<Range<Int16>>.None
}

main() {
    S()
    0
}
