// DEPENDENCE:  macro_define.cj %f.expect
// EXEC: %compiler %cmp_macro macro_define.cj
// EXEC: %run_macro %compiler %cmp_opt --debug-macro %f -o %output
// EXEC: %run %run_opt %output %run_args
// EXEC: %diff %f.expect %f.macrocall

import test.*

var ch = r'啊'

func add(a: Rune): Rune {
    ch = a
    return ch
}

/* ===== Emitted by MacroCall @M in call-chi-char.cj:16:1 ===== */
/* 16.1 */main(): Int64 {
/* 16.2 */    let a = add(r'啊')
/* 16.3 */    println(a)
/* 16.4 */    return 0
/* 16.5 */}
/* ===== End of the Emit ===== */