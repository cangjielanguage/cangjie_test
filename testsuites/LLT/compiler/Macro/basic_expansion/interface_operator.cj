// DEPENDENCE:  macro_define.cj %f.expect
// EXEC: %compiler %cmp_macro macro_define.cj
// EXEC: %run_macro %compiler %cmp_opt --debug-macro %f -o %output
// EXEC: %run %run_opt %output %run_args
// EXEC: %diff %f.expect %f.macrocall

import test.*

enum E<T> {
    e(T)
}

class A_B<T> <: A<T> {}

@M[1]
interface A<T> {
    operator func !(): E<Int32> {
        return E<Int32>.e(1)
    }
    operator func -(): E<Int32> {
        return E<Int32>.e(1)
    }
    operator func [](b: A<T>): E<Int32> {
        return E<Int32>.e(1)
    }
    operator func *(b: A<T>): E<Int32> {
        return E<Int32>.e(1)
    }
    operator func /(b: A<T>): E<Int32> {
        return E<Int32>.e(1)
    }
    operator func %(b: A<T>): E<Int32> {
        return E<Int32>.e(1)
    }
    operator func +(b: A<T>): E<Int32> {
        return E<Int32>.e(1)
    }
    operator func -(b: A<T>): E<Int32> {
        return E<Int32>.e(1)
    }
    operator func <<(b: A<T>): E<Int32> {
        return E<Int32>.e(1)
    }
    operator func >>(b: A<T>): E<Int32> {
        return E<Int32>.e(1)
    }
    operator func <(b: A<T>): E<Int32> {
        return E<Int32>.e(1)
    }
    operator func <=(b: A<T>): E<Int32> {
        return E<Int32>.e(1)
    }
    operator func >(b: A<T>): E<Int32> {
        return E<Int32>.e(1)
    }
    operator func >=(b: A<T>): E<Int32> {
        return E<Int32>.e(1)
    }
    operator func ==(b: A<T>): E<Int32> {
        return E<Int32>.e(1)
    }
    operator func !=(b: A<T>): E<Int32> {
        return E<Int32>.e(1)
    }
    operator func &(b: A<T>): E<Int32> {
        return E<Int32>.e(1)
    }
    operator func ^(b: A<T>): E<Int32> {
        return E<Int32>.e(1)
    }
    operator func |(b: A<T>): E<Int32> {
        return E<Int32>.e(1)
    }
}

main(): Int64 {
    var a: A<E<Int32>> = A_B<E<Int32>>()
    var b: A<E<Int32>> = A_B<E<Int32>>()
    var result = [b[a], b * a, b / a, b % a, b + a, b - a, b << a, b >> a, b < a, b <= a, b > a, b >= a, b == a, b != a,
        b & a, b ^ a, b | a, !b, -b]
    return 0
}
// Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
// This source file is part of the Cangjie project, licensed under Apache-2.0
// with Runtime Library Exception.
//
// See https://cangjie-lang.cn/pages/LICENSE for license information.
