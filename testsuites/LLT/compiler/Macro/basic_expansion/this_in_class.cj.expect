// DEPENDENCE:  macro_define.cj %f.expect
// EXEC: %compiler %cmp_macro macro_define.cj
// EXEC: %run_macro %compiler %cmp_opt %macro_parallel --debug-macro %f -o %output
// EXEC: %run %run_opt %output %run_args
// EXEC: %diff %f.expect %f.macrocall

import test.*

var aa = 0

/* ===== Emitted by MacroCall @M in this_in_class.cj:11:1 ===== */
/* 11.1 */class Data {
/* 11.2 */    Data(var a!: Int64 = 6) {
/* 11.3 */        aa ++
/* 11.4 */    }
/* 11.5 */    
/* 11.6 */    func f1(): This {
/* 11.7 */        this
/* 11.8 */    }
/* 11.9 */}
/* ===== End of the Emit ===== */

/* ===== Emitted by MacroCall @M in this_in_class.cj:23:1 ===== */
/* 23.1 */main(): Int64 {
/* 23.2 */    var data = Data(a: 8)
/* 23.3 */    if(data.f1().a == 8 && aa == 1) {
/* 23.4 */        return 0
/* 23.5 */    }
/* 23.6 */    return 1
/* 23.7 */}
/* ===== End of the Emit ===== */