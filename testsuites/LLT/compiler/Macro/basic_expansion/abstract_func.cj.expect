// DEPENDENCE:  macro_define.cj %f.expect
// EXEC: %compiler -Woff unused %cmp_macro macro_define.cj
// EXEC: %run_macro %compiler %cmp_opt --debug-macro %f -o %output
// EXEC: %run %run_opt %output %run_args
// EXEC: %diff %f.expect %f.macrocall

import test.*

/* ===== Emitted by MacroCall @M in abstract_func.cj:9:1 ===== */
/* 9.1 */abstract class Base2 {
/* 9.2 */    protected func getB(): Int32
/* 9.3 */}
/* ===== End of the Emit ===== */

/* ===== Emitted by MacroCall @M in abstract_func.cj:15:1 ===== */
/* 15.1 */interface Inday2 {
/* 15.2 */    func getB(): Int32
/* 15.3 */}
/* ===== End of the Emit ===== */

class Data2 <: Base2 & Inday2 {
    public func getB(): Int32 {
        var one: Int32 = 3
        return one
    }
}

main(): Int64 {
    var t3: Int32 = Data2().getB()
    if (t3 == 3) {
        return 0
    }
    return 1
}