// DEPENDENCE: macro_define.cj  %f.expect
// (CJNATIVE) EXEC: %compiler %cmp_macro macro_define.cj
// (CJNATIVE) EXEC: %run_macro %compiler %cmp_opt %macro_parallel --debug-macro %f -o %output
// (CJNATIVE) EXEC: %run %run_opt %output %run_args
// (CJNATIVE) EXEC: %diff %f.expect %f.macrocall

import test.*

/* ===== Emitted by MacroCall @M in multi_input.cj:9:1 ===== */
/* 9.1 */struct Data {
/* 9.2 */    Data(x: Int32, var p0!: Int32 = 5, var p1!: Int32 = 5, var p2!: Int32 = 5, var p3!: Int32 = 5, var p4!: Int32 = 5,
/* 9.3 */    var p5!: Int32 = 5, var p6!: Int32 = 5, var p7!: Int32 = 5, var p8!: Int32 = 5, var p9!: Int32 = 5,
/* 9.4 */    var p10!: Int32 = 5, var p11!: Int32 = 5, var p12!: Int32 = 5, var p13!: Int32 = 5, var p14!: Int32 = 5,
/* 9.5 */    var p15!: Int32 = 5, var p16!: Int32 = 5, var p17!: Int32 = 5, var p18!: Int32 = 5, var p19!: Int32 = 5,
/* 9.6 */    var p20!: Int32 = 5, var p21!: Int32 = 5, let p22!: Int32 = 5, var p23!: Int32 = 5, var p24!: Int32 = 5,
/* 9.7 */    var p25!: Int32 = 5, var p26!: Int32 = 5, var p27!: Int32 = 5, var p28!: Int32 = 5, var p29!: Int32 = 5,
/* 9.8 */    var p30!: Int32 = 5, var p31!: Int32 = 5, var p32!: Int32 = 5, var p33!: Int32 = 5, let p34!: Int32 = 5,
/* 9.9 */    var p35!: Int32 = 5, var p36!: Int32 = 5, var p37!: Int32 = 5, var p38!: Int32 = 5, var p39!: Int32 = 5,
/* 9.10 */    let p40!: Int32 = 5, var p41!: Int32 = 5, var p42!: Int32 = 5, var p43!: Int32 = 5, var p44!: Int32 = 5,
/* 9.11 */    var p45!: Int32 = 5, var p46!: Int32 = 5, var p47!: Int32 = 5, var p48!: Int32 = 5, var p49!: Int32 = 5,
/* 9.12 */    var p50!: Int32 = 5, let p51!: Int32 = 5, var p52!: Int32 = 5, var p53!: Int32 = 5, var p54!: Int32 = 5,
/* 9.13 */    var p55!: Int32 = 5, var p56!: Int32 = 5, var p57!: Int32 = 5, var p58!: Int32 = 5, var p59!: Int32 = 5,
/* 9.14 */    var p60!: Int32 = 5, var p61!: Int32 = 5, var p62!: Int32 = 5, var p63!: Int32 = 5, var p64!: Int32 = 5,
/* 9.15 */    var p65!: Int32 = 5, var p66!: Int32 = 5, var p67!: Int32 = 5, var p68!: Int32 = 5, var p69!: Int32 = 5,
/* 9.16 */    var p70!: Int32 = 5, var p71!: Int32 = 5, var p72!: Int32 = 5, var p73!: Int32 = 5, var p74!: Int32 = 5,
/* 9.17 */    var p75!: Int32 = 5, var p76!: Int32 = 5, var p77!: Int32 = 5, var p78!: Int32 = 5, var p79!: Int32 = 5,
/* 9.18 */    var p80!: Int32 = 5, let p81!: Int32 = 5, var p82!: Int32 = 5, var p83!: Int32 = 5, var p84!: Int32 = 5,
/* 9.19 */    var p85!: Int32 = 5, var p86!: Int32 = 5, var p87!: Int32 = 5, var p88!: Int32 = 5, var p89!: Int32 = 5,
/* 9.20 */    var p90!: Int32 = 5, var p91!: Int32 = 5, var p92!: Int32 = 5, var p93!: Int32 = 5, var p94!: Int32 = 5,
/* 9.21 */    var p95!: Int32 = 5, var p96!: Int32 = 5, var p97!: Int32 = 5, var p98!: Int32 = 5, var p99!: Int32 = 5,
/* 9.22 */    var p100!: Int32 = 5) {
/* 9.23 */    }
/* 9.24 */}
/* ===== End of the Emit ===== */

/* ===== Emitted by MacroCall @M in multi_input.cj:35:1 ===== */
/* 35.1 */func run(): Bool {
/* 35.2 */    var value: Data = Data(9);
/* 35.3 */    return true
/* 35.4 */}
/* ===== End of the Emit ===== */

/* ===== Emitted by MacroCall @M in multi_input.cj:41:1 ===== */
/* 41.1 */main(): Int64 {
/* 41.2 */    if(run()) {
/* 41.3 */        return 0
/* 41.4 */    }
/* 41.5 */    return 1
/* 41.6 */}
/* ===== End of the Emit ===== */