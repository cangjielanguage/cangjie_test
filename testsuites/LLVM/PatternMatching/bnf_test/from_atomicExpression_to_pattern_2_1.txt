
 /*
 * -@TestCaseID: xxx
 * -@TestCaseName: xxx
 * -@TestCaseType: Function Test
 * -@RequirementID: RequirementID
 * -@RequirementName: pattern
 * -@Conditon: cjc, clang, maple test framework and python3.
 * -@Brief: Test <pattern> in <atomicExpression> case (use ifExpression):
Origin BNF is 
    :  literalConstant
    | collectionLiteral
    | tupleLiteral
    | Identifier (NL* typeArguments)?
    | unitLiteral
    | ifExpression
    | matchExpression
    | loopExpression
    | tryExpression
    | jumpExpression
    | typeConvExpr
    | thisSuperExpression
    | spawnExpression
    | synchronizedExpression
    | parenthesizedExpression
    | quoteExpression
    | lambdaExpression
    
Test   BNF is 
    :  literalConstant
    | collectionLiteral
    | tupleLiteral
    | Identifier (NL* typeArguments)?
    | unitLiteral
    | <<TARGET=ifExpression->pattern>>
    | matchExpression
    | loopExpression
    | tryExpression
    | jumpExpression
    | typeConvExpr
    | thisSuperExpression
    | spawnExpression
    | synchronizedExpression
    | parenthesizedExpression
    | quoteExpression
    | lambdaExpression
     
ã€‚
 * -@Expect: see case.
 * -@Priority: level0
 */
