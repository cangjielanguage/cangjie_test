 /*
 * -@TestCaseID: class_rename_07
 * -@TestCaseName: class_rename_07.cj
 * -@TestCaseType: Function Test
 * -@RequirementID: SR-Lang-1005
 * -@RequirementName: JS互操作
 * -@Conditon: cjc, clang, maple test framework and python3.
 * -@Brief: 仓颉通过jsRename、jsMember联合调用js中入参为Int64对象，返回类型为Bool的函数
 * -#step1: js侧的函数,入参为无,返回Int64对象,函数体为普通表达式,作为成员导出
 * -#step2: 仓颉侧 foreign块中@JsRename修饰class,Js的标准内置对象Int64重命名为B 在class B中定义函数，函数入参B类型，返回Bool类型 
 * -#step3: 仓颉侧 foreign class块中@JsMember修饰函数,入参为无,返回B类型
 * -#step4: step2中的函数在main方法中通过Step3函数的调用而调用，step2函数的实参为step3调用的返回值
 * -@Expect: 编译通过.
 * -@Priority: level0
 * -@SpecVersion: spec 0.22.6
 * -@SpecChapter: @JsRename
 * -@SpecDetail: 1、函数的参数和返回值类型仅支持部分类型 2、仓颉侧Bool映射Js侧boolean 3、当 JavaScript 中的函数或变量作为包成员导出时可通过 @JsMember 注解来表示
 * -@SpecDetail: 4、当声明的函数或变量名称与仓颉语法冲突时（仓颉不支持的字符或关键字冲突等等）或者其他需要重命名的情况（省略 NameSpace 定义等）可以通过 `@JsRename` 注解来修改名称 
 * -@SpecDetail: 5、在仓颉中使用 `foreign` 修饰 class 来表示外部 `JavaScript` 类，其成员都默认为 `foreign`，且无需再添加 `foreign` 修饰符。     
 * -@catalog: # 语言互操作## JavaScript 互操作### 仓颉调用 JavaScript#### foreign 修饰符##### foreign 函数--5
 * -@catalog: # 语言互操作## JavaScript 互操作### 仓颉调用 JavaScript#### @JsMember--1
 * -@catalog: # 语言互操作## JavaScript 互操作### 类型映射#### 值类型映射--1
 * -@catalog: # 语言互操作## JavaScript 互操作### 仓颉调用 JavaScript#### @JsRename--1
 * -@catalog: # 语言互操作## JavaScript 互操作### 仓颉调用 JavaScript#### foreign 修饰符##### foreign 类和接口--1
 */