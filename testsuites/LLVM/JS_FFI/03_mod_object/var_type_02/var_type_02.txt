/*
 * -@TestCaseID: var_type_02
 * -@TestCaseName: var_type_02.cj
 * -@TestCaseType: Function Test
 * -@RequirementID: SR-Lang-1005
 * -@RequirementName: JS互操作
 * -@Conditon: cjc, clang, maple test framework and python3.
 * -@Brief: 仓颉通过jsModule调用js中入参为匿名对象（String String Number Number），返回值为Number
 * -#step1: js侧的类的静态函数,入参为匿名对象（String String Number Number），返回值为Number,函数体为if-else(函数表达式),直接导出函数
 * -#step2: 仓颉侧@JsModule修饰top-level的函数,返回类型为UInt64,入参为使用@JsObject声明的class，其主构造函数成员变量形参类型（String（static修饰） Char Int8 Int16）
 * -#step3: step2中的函数赋值给内的成员函数，在main中通过类（）.成员函数调用
 * -@Expect: 编译通过.
 * -@Priority: level0
 * -@SpecVersion: spec 0.22.6
 * -@SpecChapter: @JsObject
 * -@SpecDetail:1、函数的参数和返回值类型仅支持部分类型  2、当 `JavaScript` 包直接导出函数或变量时，可以通过 `@JsModule` 注解来表示
 * -@SpecDetail:2、仓颉侧String、Char、Int8、Int16、class分别映射Js侧String、String、number、number、匿名对象
 * -@SpecDetail:4、在仓颉中表示 `JavaScript` 匿名对象类型时，可通过 `@JsObject` 注解修饰 `class` 实现，当class使用该注解标注时，类内仅允许一个主构造函数存在，同时主构造函数的形参只可以为成员变量形参，且函数体为空。
 * -@catalog: # 语言互操作## JavaScript 互操作### 类型映射#### 值类型映射--1
 * -@catalog: # 语言互操作## JavaScript 互操作### 仓颉调用 JavaScript#### @JsObject--1
 * -@catalog: # 语言互操作## JavaScript 互操作### 仓颉调用 JavaScript#### foreign 修饰符##### foreign 函数--5
 * -@catalog: # 语言互操作## JavaScript 互操作### 仓颉调用 JavaScript#### @JsModule--1
 */

