/*
 * -@TestCaseID: Mod_Group_01
 * -@TestCaseName: Mod_Group_01.cj
 * -@TestCaseType: Function Test
 * -@RequirementID: SR-Lang-1005
 * -@RequirementName: JS互操作
 * -@Conditon: cjc, clang, maple test framework and python3.
 * -@Brief: 仓颉通过jsMember调用js中入参为匿名对象（Boolean String Number function），返回值为Number
 * -#step1: js侧的全局函数,入参为匿名对象（Boolean String Number function），返回值为Number,函数体为if-else(函数声明),作为成员导出
 * -#step2: 仓颉侧@JsMember修饰top-level的函数,返回类型为UInt32，入参@JsObject声明的class。class声明在包a内，其主构造函数的成员变量类型分别为（Bool String Int64 (Int64) -> Int64）
 * -#step3: step2中的函数在main中调用
 * -@Expect: 编译通过.
 * -@Priority: level0
 * -@SpecVersion: spec 0.22.6
 * -@SpecChapter: @JsObject
 * -@SpecDetail:1、函数的参数和返回值类型仅支持部分类型  2、当 `JavaScript` 包直接导出函数或变量时，可以通过 `@JsModule` 注解来表示
 * -@SpecDetail:2、仓颉侧String、Bool、(Int64) -> Int64）、Int64、class分别映射Js侧String、boolean、function、number、匿名对象
 * -@SpecDetail:4、在仓颉中表示 `JavaScript` 匿名对象类型时，可通过 `@JsObject` 注解修饰 `class` 实现，当class使用该注解标注时，类内仅允许一个主构造函数存在，同时主构造函数的形参只可以为成员变量形参，且函数体为空。通过 `@JsObject`
 * -@catalog: # 语言互操作## JavaScript 互操作### 类型映射#### 值类型映射--1
 * -@catalog: # 语言互操作## JavaScript 互操作### 仓颉调用 JavaScript#### @JsObject--1
 * -@catalog: # 语言互操作## JavaScript 互操作### 仓颉调用 JavaScript#### foreign 修饰符##### foreign 函数--5
 * -@catalog: # 语言互操作## JavaScript 互操作### 仓颉调用 JavaScript#### @JsModule--1
 */