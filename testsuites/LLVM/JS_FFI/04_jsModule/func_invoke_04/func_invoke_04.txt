 /*
 * -@TestCaseID: func_invoke_04
 * -@TestCaseName: func_invoke_04.cj
 * -@TestCaseType: Function Test
 * -@RequirementID: SR-Lang-1005
 * -@RequirementName: JS互操作
 * -@Conditon: cjc, clang, maple test framework and python3.
 * -@Brief: 仓颉通过jsModule调用js中入参无和返回值为含function的类的函数
 * -#step1: js侧的全局函数,入参无,返回值为含成员函数的类,函数体为普通表达式,直接作为函数导出
 * -#step2: 仓颉侧@JsModule修饰top-level的函数,用@JavaScript修饰返回值类的函数，入参为无,返回值为含成员函数的类
 * -#step3: 在类A中定义成员函数a,入参无，返回值为函数（返回函数入参无，返回值为Moment类(返回step2的函数)），在main中通过var修饰将类A赋值给变量a,在main中通过a.a()()调用
 * -#step4: 在类A中定义成员函数b,入参无，返回值为Moment类(返回step2的函数)，在main中通过var修饰将类A赋值给变量a,在main中通过a.b()调用
 * -@Expect: 编译通过.
 * -@Priority: level0
 * -@SpecVersion: spec 0.22.6
 * -@SpecChapter: @JsModule
 * -@SpecDetail: 1、仓颉侧Bool映射Js侧boolean 2、当 `JavaScript` 包直接导出函数或变量时，可以通过 `@JsModule` 注解来表示 3、函数的参数和返回值类型仅支持部分类型
 * -@SpecDetail: 4、@JavaScript 注解表示该 foreign 声明映射 JavaScript 对象（与其他外部对象区分）。所有用于表示外部JavaScript 声明的 foreign 语句都必须添加 @JavaScript 注解
 * -@catalog: # 语言互操作## JavaScript 互操作### 类型映射#### 值类型映射--1
 * -@catalog: # 语言互操作## JavaScript 互操作### 仓颉调用 JavaScript#### @JsModule--1
 * -@catalog: # 语言互操作## JavaScript 互操作### 仓颉调用 JavaScript#### foreign 修饰符--6
 * -@catalog: # 语言互操作## JavaScript 互操作### 仓颉调用 JavaScript#### foreign 修饰符##### foreign 函数--5
 */
