/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 2
// DEPENDENCE:  ../../../lsp_test.py ../../../sourcecode/cangjieTest/cangjiesource ../../../lsp_config.txt
// EXEC: %python lsp_test.py textDocument_completion_135.info

Req#
{"jsonrpc": "2.0", "id": "0", "method": "initialize", "params": {"processId": null, "rootPath": "cangjiesource", "rootUri": "cangjiesource", "capabilities": {"workspace": {"applyEdit": true, "workspaceEdit": {}, "didChangeWatchedFiles": {}, "symbol": {}, "executeCommand": {}, "workspaceFolders": false, "configuration": false}, "textDocument": {"synchronization": {"willSave": true, "willSaveWaitUntil": true, "didSave": true}, "completion": {"completionItem": {"snippetSupport": true}}, "hover": {}, "signatureHelp": {}, "references": {}, "documentHighlight": {"dynamicRegistration": true}, "formatting": {}, "rangeFormatting": {}, "onTypeFormatting": {}, "definition": {}, "codeAction": {}, "documentLink": {}, "rename": {"prepareSupport": true}, "semanticHighlightingCapabilities": {"semanticHighlighting": true}, "callHierarchy": {}, "semanticTokens": {"tokenTypes": ["namespace", "type", "class", "enum", "interface", "struct", "typeParameter", "parameter", "variable", "property", "enumMember", "event", "function", "method", "macro", "keyword", "modifier", "comment", "string", "number", "regexp", "operator", "member", "label"], "tokenModifiers": ["declaration", "definition", "readonly", "static", "deprecated", "abstract", "async", "modification", "documentation", "defaultLibrary"], "dynamicRegistration": true}}}}}
{"jsonrpc":"2.0","method":"initialized","params":{}}
{"jsonrpc": "2.0", "method": "textDocument/didOpen", "params": {"textDocument": {"uri": "cangjiesource/src/Pattern_matching/tuple001.cj", "languageId": "Cangjie", "version": 1, "text": "package default.Pattern_matching\n\nfunc test8() {\n    let tv = (\"Alice\", 24)\n    let s = match (tv) {\n        case (\"Bob\", age) => \"Bob is ${age} years old\"\n        case (\"Alice\", age) => \"Alice is ${age} years old\"\n        case (name, 100) => \"${name} is 100 years old\"\n        case (_, _) => \"someone\"\n    }\n}\n"}}}
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"cangjiesource/src/Pattern_matching/tuple001.cj","version":2},"contentChanges":[{"range":{"start":{"line":4,"character":19},"end":{"line":4,"character":21}},"rangeLength":2,"text":"t"}]}}
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"cangjiesource/src/Pattern_matching/tuple001.cj","version":3},"contentChanges":[{"range":{"start":{"line":4,"character":19},"end":{"line":4,"character":20}},"rangeLength":1,"text":"tv"}]}}
{"jsonrpc":"2.0","id":2206,"method":"textDocument/completion","params":{"textDocument":{"uri":"cangjiesource/src/Pattern_matching/tuple001.cj"},"position":{"line":4,"character":21},"context":{"triggerKind":1}}}
{"jsonrpc": "2.0", "id": 2207, "method": "shutdown", "params": {}}
{"jsonrpc": "2.0", "method": "exit", "params": {}}

Rev#
{"id": 2206,"jsonrpc": "2.0","result": [{"deprecated": false,"detail": "","documentation": "","filterText": "IntNative","insertText": "IntNative","insertTextFormat": 1,"kind": 14,"label": "IntNative","sortText": ""},{"deprecated": false,"detail": "","documentation": "","filterText": "UIntNative","insertText": "UIntNative","insertTextFormat": 1,"kind": 14,"label": "UIntNative","sortText": ""},{"deprecated": false,"detail": "(class) public class NegativeArraySizeException <: Exception","documentation": "","filterText": "NegativeArraySizeException","insertText": "NegativeArraySizeException","insertTextFormat": 1,"kind": 7,"label": "NegativeArraySizeException","sortText": ""},{"deprecated": false,"detail": "(function) public func init()","documentation": "","filterText": "NegativeArraySizeException","insertText": "NegativeArraySizeException()","insertTextFormat": 1,"kind": 3,"label": "NegativeArraySizeException()","sortText": ""},{"deprecated": false,"detail": "(function) public func init(message: String)","documentation": "","filterText": "NegativeArraySizeException","insertText": "NegativeArraySizeException(${1:message: String})","insertTextFormat": 2,"kind": 3,"label": "NegativeArraySizeException(message: String)","sortText": ""},{"deprecated": false,"detail": "(class) public class StackOverflowError <: Error","documentation": "","filterText": "StackOverflowError","insertText": "StackOverflowError","insertTextFormat": 1,"kind": 7,"label": "StackOverflowError","sortText": ""},{"deprecated": false,"detail": "","documentation": "","filterText": "nonExhaustive","insertText": "nonExhaustive","insertTextFormat": 1,"kind": 2,"label": "nonExhaustive","sortText": ""},{"deprecated": false,"detail": "(function) func nonExhaustive(x: Int64)","documentation": "","filterText": "nonExhaustive","insertText": "nonExhaustive(${1:x: Int64})","insertTextFormat": 2,"kind": 2,"label": "nonExhaustive(x: Int64)","sortText": ""},{"deprecated": false,"detail": "(variable) let tv = (\"Alice\", 24)","documentation": "","filterText": "tv","insertText": "tv","insertTextFormat": 1,"kind": 6,"label": "tv","sortText": ""}]}
