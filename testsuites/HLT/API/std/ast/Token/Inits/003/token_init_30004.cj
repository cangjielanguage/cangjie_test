/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 1
// EXEC: %compiler %cmp_opt %use_ast %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args


import std.ast.*


main(){
    var b = [
Token(DOT),
Token(COMMA),
Token(LPAREN),
Token(RPAREN),
Token(LSQUARE),
Token(RSQUARE),
Token(LCURL),
Token(RCURL),
Token(EXP),
Token(MUL),
Token(MOD),
Token(DIV),
Token(ADD),
Token(SUB),
Token(INCR),
Token(DECR),
Token(AND),
Token(OR),
Token(COALESCING),
Token(PIPELINE),
Token(COMPOSITION),
Token(NOT),
Token(BITAND),
Token(BITNOT),
Token(BITOR),
Token(BITXOR),
Token(LSHIFT),
Token(RSHIFT),
Token(COLON),
Token(SEMI),
Token(ASSIGN),
Token(ADD_ASSIGN),
Token(SUB_ASSIGN),
Token(MUL_ASSIGN),
Token(EXP_ASSIGN),
Token(DIV_ASSIGN),
Token(MOD_ASSIGN),
Token(AND_ASSIGN),
Token(OR_ASSIGN),
Token(BITAND_ASSIGN),
Token(BITOR_ASSIGN),
Token(BITXOR_ASSIGN),
Token(LSHIFT_ASSIGN),
Token(RSHIFT_ASSIGN),
Token(ARROW),
Token(DOUBLE_ARROW),
Token(RANGEOP),
Token(CLOSEDRANGEOP),
Token(ELLIPSIS),
Token(HASH),
Token(AT),
Token(QUEST),
Token(TokenKind.LT),
Token(TokenKind.GT),
Token(TokenKind.LE),
Token(TokenKind.GE),
Token(IS),
Token(AS),
Token(NOTEQ),
Token(TokenKind.EQUAL),
Token(WILDCARD),
Token(INT8),
Token(INT16),
Token(INT32),
Token(INT64),
Token(INTNATIVE),
Token(UINT8),
Token(UINT16),
Token(UINT32),
Token(UINT64),
Token(UINTNATIVE),
Token(FLOAT16),
Token(FLOAT32),
Token(FLOAT64),
Token(RUNE),
Token(BOOLEAN),
Token(UNIT),
Token(STRUCT),
Token(ENUM),
Token(THISTYPE),
Token(PACKAGE),
Token(IMPORT),
Token(CLASS),
Token(INTERFACE),
Token(FUNC),
Token(MACRO),
Token(QUOTE),
Token(DOLLAR),
Token(LET),
Token(VAR),
Token(TYPE),
Token(INIT),
Token(THIS),
Token(SUPER),
Token(IF),
Token(ELSE),
Token(CASE),
Token(TRY),
Token(CATCH),
Token(FINALLY),
Token(FOR),
Token(DO),
Token(WHILE),
Token(THROW),
Token(RETURN),
Token(CONTINUE),
Token(BREAK),
Token(IN),
Token(NOT_IN),
Token(MATCH),
Token(WHERE),
Token(EXTEND),
Token(WITH),
Token(PROP),
Token(STATIC),
Token(PUBLIC),
Token(PRIVATE),
Token(INTERNAL),
Token(PROTECTED),
Token(OVERRIDE),
Token(REDEF),
Token(ABSTRACT),
Token(OPEN),
Token(FOREIGN),
Token(MUT),
Token(UNSAFE),
Token(OPERATOR),
Token(SPAWN),
Token(SYNCHRONIZED),
Token(UPPERBOUND),
Token(IDENTIFIER),
Token(INTEGER_LITERAL),
Token(FLOAT_LITERAL),
Token(COMMENT),
Token(NL),
Token(END),
Token(SENTINEL),
Token(RUNE_LITERAL),
Token(STRING_LITERAL),
Token(MULTILINE_STRING),
Token(MULTILINE_RAW_STRING),
Token(BOOL_LITERAL),
Token(DOLLAR_IDENTIFIER),
Token(ANNOTATION),
Token(ILLEGAL)
    ]
    var c = Tokens(b)
    print("${c.size}\n")
}
