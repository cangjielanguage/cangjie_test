/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 2
// EXEC: %compiler %import-cangjie-stdx %cmp_opt  %f -o %output
// RUN-EXEC: %run_stdx %output %run_args

import stdx.encoding.base64.*

func matchResult<T>(x: Option<T>, default: T): T {
    var result = match (x) {
        case Some(x) => x
        case None => default
    }
    return result
}

main(): Int64 {
    var str = "Mi4xLjEuMSBOdW1lcmljIExpdGVyYWxzDQpUZXJtcyBzdWNoIGFzICA1ICwgIDI0ICwgIDIuOSAsIGFuZCAgMy4xNCBhcmUgcmVmZXJyZWQgdG8gYXMgbnVtZXJpYyBsaXRlcmFscy4gTGl0ZXJhbHMgY2FuIGJlIHJlZmVycmVkDQp0byBvbmx5IGJ5IHRoZWlyIHZhbHVlcyBhbmQgdGhlaXIgdmFsdWVzIGNhbm5vdCBiZSBjaGFuZ2VkLg0KSW4gdGhlIGZvbGxvd2luZywgd2UgaW50cm9kdWNlIHRoZSBpbnRlZ2VyIGxpdGVyYWxzIGFzIHdlbGwgYXMgdGhlIGZsb2F0aW5nIHBvaW50IGxpdGVyYWxzLg0KSW50ZWdlciBsaXRlcmFscyBjYW4gYmUgd3JpdHRlbiBpbiBmb3VyIGJhc2VzOiBiaW5hcnksIG9jdGFsLCBkZWNpbWFsLCBhbmQgaGV4YWRlY2ltYWwuIEJpbmFyeQ0KbGl0ZXJhbHMgbXVzdCBzdGFydCB3aXRoICAwYiAob3IgIDBCICksIG9jdGFsIGxpdGVyYWxzIG11c3Qgc3RhcnQgd2l0aCAgMG8gKG9yICAwTyApLCBhbmQgaGV4YWRlY2ltYWwNCmxpdGVyYWxzIG11c3Qgc3RhcnQgd2l0aCAgMHggKG9yICAwWCApLiBEZWNpbWFsIGxpdGVyYWxzIGRvIG5vdCByZXF1aXJlIGEgcHJlZml4LiBGb3IgZXhhbXBsZSwgdGhlDQpkZWNpbWFsIHZhbHVlICAyNCBtYXkgYmUgd3JpdHRlbiBpbiBhbnkgb25lIG9mIHRoZSBmb2xsb3dpbmcgZm91ciBmb3JtcywgaW4gd2hpY2ggdGhlIHVuZGVybGluZQ0KXyBhY3RzIGFzIGEgc2VwYXJhdG9yIGZvciByZWFkYWJpbGl0eToNClNlZSBzZWN0aW9uIEludGVnZXIgTGl0ZXJhbHMgZm9yIHRoZSBzeW50YXggb2YgaW50ZWdlciBsaXRlcmFscy4NCkZsb2F0aW5nLXBvaW50IHR5cGVzIGluIHRoZSBDYW5namllIHByb2dyYW1taW5nIGxhbmd1YWdlIGNvbmZvcm0gdG8gdGhlIElFRUUgNzU0IHN0YW5kYXJkLiBJbg0KcGFydGljdWxhciwgIEZsb2F0MTYgY29ycmVzcG9uZHMgdG8gdGhlIGhhbGYtcHJlY2lzaW9uIGZvcm1hdCAoMTYtYml0KSBpbiBJRUVFIDc1NDsgIEZsb2F0MzINCmNvcnJlc3BvbmRzIHRvIHRoZSBzaW5nbGUtcHJlY2lzaW9uIGZvcm1hdCAoMzItYml0KSBpbiBJRUVFIDc1NCwgYW5kICBGbG9hdDY0IGNvcnJlc3BvbmRzIHRvIHRoZQ0KZG91YmxlLXByZWNpc2lvbiBmb3JtYXQoNjQtYml0KSBpbiBJRUVFIDc1NC4gQSBmbG9hdGluZy1wb2ludCBsaXRlcmFsIHVzdWFsbHkgY29udGFpbnMgYW4gaW50ZWdlcg0KcGFydCwgYSBmcmFjdGlvbmFsIHBhcnQgKGluY2x1ZGluZyBhIGRlY2ltYWwgcG9pbnQpLCBhbmQgYW4gZXhwb25lbnRpYWwgcGFydC4gVGhlcmUgYXJlIHR3byBmb3JtcyBvZg0KcmVwcmVzZW50YXRpb246IGRlY2ltYWwgb3IgaGV4YWRlY2ltYWwuIEluIHRoZSBkZWNpbWFsIHJlcHJlc2VudGF0aW9uLCBhIGZsb2F0aW5nLXBvaW50IG51bWJlcg0KbXVzdCBjb250YWluIGFuIGludGVnZXIgcGFydCBvciBhIGZyYWN0aW9uYWwgcGFydC4gQW4gZXhwb25lbnRpYWwgcGFydCAocHJlZml4ZWQgd2l0aCBlIG9yIEUsIGFuZA0KYmFzZSAxMCkgaXMgcmVxdWlyZWQgd2hlbiB0aGVyZSBpcyBubyBkZWNpbWFsIHBhcnQuIEluIHRoZSBoZXhhZGVjaW1hbCByZXByZXNlbnRhdGlvbiwgYSBmbG9hdGluZw0KMGIwMDAxXzEwMDAgJiMxNjA7JiMxNjA7Ly8gQmluYXJ5Lg0KMG8zMCAmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsvLyBPY3RhbC4NCjI0ICYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOy8vIERlY2ltYWwuDQoweDE4ICYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOy8vIEhleGFkZWNpbWFsLg0KMQ0KMg0KMw0KNA0KcG9pbnQgbnVtYmVyIG11c3QgY29udGFpbiBhdCBsZWFzdCBvbmUgaW50ZWdlciBwYXJ0IG9yIGZyYWN0aW9uYWwgcGFydCAocHJlZml4ZWQgd2l0aCAweCkgYW5kIG11c3QNCmNvbnRhaW4gYW4gZXhwb25lbnRpYWwgcGFydCAocHJlZml4ZWQgd2l0aCBwIG9yIFAsIGFuZCBiYXNlIDIpLiBJbiBhZGRpdGlvbiwgdGhlIGZvbGxvd2luZyBhcmUNCmFkZGl0aW9uYWwgc3BlY2lhbCBmbG9hdGluZy1wb2ludCBsaXRlcmFsczogcG9zaXRpdmUgaW5maW5pdHkgKCBQT1NJVElWRV9JTkZJTklUWSApLCBuZWdhdGl2ZSBpbmZpbml0eQ0KKCBORUdBVElWRV9JTkZJTklUWSApLCBOb3QgYSBOdW1iZXIgKCBOYU4gKSwgcG9zaXRpdmUgMCAoICswLjAgKSBhbmQgbmVnYXRpdmUgMCAoLSAwLjAgKS4gIGluZmluaXR5DQpyZXByZXNlbnRzIHRoZSByZXN1bHQgb2YgYW4gb3BlcmF0aW9uIGJleW9uZCB0aGUgcmFuZ2Ugb2YgdGhlIGZsb2F0aW5nLXBvaW50IHR5cGUuIEZvciBleGFtcGxlLCBpZg0KdHdvIGxhcmdlIGZsb2F0aW5nLXBvaW50IG51bWJlcnMgYXJlIG11bHRpcGxpZWQgb3IgYSBub24temVybyBudW1iZXIgaXMgZGl2aWRlZCBieSAgMCAsIHRoZSByZXN1bHQNCmlzICBpbmZpbml0eSAuIE5vdGUgdGhhdCB0aGUgc2lnbiBvZiB0aGUgIGluZmluaXR5IGlzIGRldGVybWluZWQgYnkgdGhlIHNpZ25zIG9mIHRoZSBvcGVyYW5kcy4NCk5hTiByZXByZXNlbnRzIGEgdmFsdWUgdGhhdCBpcyBuZWl0aGVyIGEgcmVhbCB2YWx1ZSBub3IgaW5maW5pdHkuIEZvciBleGFtcGxlLCB0aGUgcmVzdWx0IG9mDQpQT1NJVElWRV9JTkZJTklUWSAqIDAgaXMgIE5hTiAuIFRoZSBmb2xsb3dpbmcgYXJlIGV4YW1wbGVzIG9mIGZsb2F0aW5nLXBvaW50IGxpdGVyYWxzLg0KU2VlIHNlY3Rpb24gRmxvYXRpbmcgUG9pbnQgTGl0ZXJhbHMgZm9yIHRoZSBzeW50YXggb2YgZmxvYXRpbmctcG9pbnQgbGl0ZXJhbHMuDQoyLjEuMS4yIE9wZXJhdG9ycyBTdXBwb3J0ZWQgYnkgTnVtYmVyIFR5cGVzDQpPcGVyYXRvcnMgc3VwcG9ydGVkIGJ5IG51bWVyaWMgdHlwZXMgaW5jbHVkZTogYXJpdGhtZXRpYyBvcGVyYXRvcnMsIGJpdHdpc2Ugb3BlcmF0b3JzLA0KcmVsYXRpb25hbCBvcGVyYXRvcnMsIGluY3JlbWVudC9kZWNyZW1lbnQgb3BlcmF0b3JzLCB1bmFyeSBuZWdhdGl2ZSBvcGVyYXRvcnMsIGFuZCAoY29tcG91bmQpDQphc3NpZ25tZW50IG9wZXJhdG9ycy4gQWxsIHRoZSBwcmVjZWRpbmcgb3BlcmF0b3JzIGFyZSBkZWZpbmVkIGZvciBpbnRlZ2VyIHR5cGVzLiBBbGwgYnV0IGJpdHdpc2UNCm9wZXJhdG9ycyBhcmUgZGVmaW5lZCBmb3IgZmxvYXRpbmctcG9pbnQgdHlwZXMuIEluIHRoZSBmb2xsb3dpbmcsIHdlIGZvY3VzIG9uIGludHJvZHVjaW5nIGhvdw0KdGhlc2Ugb3BlcmF0b3JzIGFyZSBkZWZpbmVkIGZvciBpbnRlZ2VyIHR5cGVzLCB3aXRoIHVuZGVyc3RhbmRpbmcgdGhhdCB0aGUgc2FtZSBhcHBsaWVzIHRvDQpmbG9hdGluZy1wb2ludCB0eXBlcy4NCkFyaXRobWV0aWMgb3BlcmF0b3JzIGluY2x1ZGUgYWRkaXRpb24oICsgKSwgc3VidHJhY3Rpb24oIC0gKSwgbXVsdGlwbGljYXRpb24oICogKSwgZGl2aXNpb24oIC8gKSwNCnJlbWluZGVyKCAlICksIGFuZCBwb3dlciggKiogKS4gSWYgYXJpdGhtZXRpYyBvcGVyYXRvcnMgYXJlIG5vdCBvdmVybG9hZCAoc2VlIHNlY3Rpb24gb3BlcmF0b3INCm92ZXJsb2FkaW5nKSwgdGhlIG9wZXJhbmRzIG9mIHRoZW0gbXVzdCBoYXZlIHRoZSBzYW1lIHR5cGUuIEV4cGxpY2l0IHR5cGUgY29udmVyc2lvbiBtdXN0IGJlDQpwZXJmb3JtZWQgZmlyc3QgdG8gcGVyZm9ybSBvcGVyYXRpb25zIG9uIG9wZXJhbmRzIHdpdGggZGlmZmVyZW50IHR5cGVzLiBUaGUgZm9sbG93aW5nIHNob3dzDQpleGFtcGxlcyBvZiBhcml0aG1ldGljIG9wZXJhdGlvbnMuIFRoZSByZWFkZXJzIGFyZSByZWZlcnJlZCB0byBzZWN0aW9uIEFyaXRobWV0aWMgRXhwcmVzc2lvbnMgZm9yDQp0aGUgcHJlY2VkZW5jZSBhbmQgYXNzb2NpYXRpdml0eSBvZiB0aGUgYXJpdGhtZXRpYyBvcGVyYXRvcnMuDQpCaXR3aXNlIG9wZXJhdG9ycyBpbmNsdWRlIGJpdHdpc2Ugbm90ICggISApLCBiaXR3aXNlIGxlZnQgc2hpZnQgKCAmbHQ7Jmx0OyApLCBiaXR3aXNlIHJpZ2h0IHNoaWZ0ICggJmd0OyZndDsgKSwgYml0d2lzZQ0KYW5kICggJiApLCBiaXR3aXNlIHhvciAoIF4gKSwgYW5kIGJpdCBvciAoIHwgKS4gRm9yIGRldGFpbHMgYWJvdXQgcHJlY2VkZW5jZSwgc2VlIHRoZSBkZXNjcmlwdGlvbiBvZg0KYml0d2lzZSBleHByZXNzaW9ucyBpbiBDaGFwdGVyIDQuIFRoZSBmb2xsb3dpbmcgYXJlIHNpbXBsZSBleGFtcGxlcyBvZiBiaXQgb3BlcmF0aW9ucyBvbg0KaW50ZWdlcnMuDQozLjE0IC8vIGRlY2ltYWwgRmxvYXQ2NCAzLjE0Lg0KMi40ZS0xIC8vIGRlY2ltYWwgRmxvYXQ2NCAwLjI0Lg0KMmUzIC8vIGRlY2ltYWwgRmxvYXQ2NCAyMDAwLjAuDQouOCAvLyBkZWNpbWFsIEZsb2F0NjQgMC44Lg0KLjEyM2UyIC8vIGRlY2ltYWwgRmxvYXQ2NCAxMi4zLg0KMHgxLjFwMCAvLyBoZXhhZGVjaW1hbCBGbG9hdDY0IDEuMDYyNSAoZGVjaW1hbCB2YWx1ZSkuDQoweDFwMiAvLyBoZXhhZGVjaW1hbCBGbG9hdDY0IDQgKGRlY2ltYWwgdmFsdWUpLg0KMHguMnA0IC8vIGhleGFkZWNpbWFsIEZsb2F0NjQgMiAoZGVjaW1hbCB2YWx1ZSkuDQoxDQoyDQozDQo0DQo1DQo2DQo3DQo4DQoyICsgMyAmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsvLyBhZGQgcmVzdWx0OiA1DQozIC0gMSAmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsvLyBzdWIgcmVzdWx0OiAyDQozICogOSAmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsvLyBtdWwgcmVzdWx0OiAyNw0KMjQgLyA4ICYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOy8vIGRpdiByZXN1bHQ6IDMNCjcgJSAzICYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOyYjMTYwOy8vIG1vZCByZXN1bHQ6IDENCjIgKiogMyAmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsmIzE2MDsvLyBwb3dlciByZXN1bHQ6IDgNCjUgKyAxNSAtIDIgKiAxMCAvIDQgJiMxNjA7JiMxNjA7Ly8gcmVzdWx0OiAxNQ0KNSArIDEwIC0gMyAqIDQgKiogMiAvIDMgJSA1ICYjMTYwOy8vIHJlc3VsdDogMTQNCjENCjINCjMNCjQNCjUNCjYNCjcNCjgNClJlbGF0aW9uYWwgb3BlcmF0b3JzIGluY2x1ZGUgbGVzcyB0aGVuKCAmbHQ7ICksIGdyZWF0ZXIgdGhhbiggJmd0OyApLCBsZXNzIHRoYW4gb3IgZXF1YWwgdG8oICZsdDs9ICksIGdyZWF0ZXINCnRoYW4gb3IgZXF1YWwgdG8oICZndDs9ICksIGVxdWFsIHRvKCA9PSApLCBhbmQgbm90IGVxdWFsIHRvKCAhPSApLiBUaGVpciByZXN1bHRzIGFyZSBCb29sZWFuIHZhbHVlcyAoaS5lLg0KdHJ1ZSBvciBmYWxzZSkuIEZvciBkZXRhaWxzIGFib3V0IHJlbGF0aW9uYWwgb3BlcmF0aW9ucywgc2VlIHRoZSBkZXNjcmlwdGlvbiBvZiByZWxhdGlvbmFsIG9wZXJhdG9ycw0KaW4gQ2hhcHRlciA0LiBUaGUgZm9sbG93aW5nIGFyZSBleGFtcGxlcyByZWxhdGlvbmFsIG9wZXJhdGlvbnMgb24gaW50ZWdlcnMuDQpTZWxmLWluY3JlbWVudC9kZWNyZW1lbnQgb3BlcmF0b3JzIGluY2x1ZGUgdGhlIHNlbGYtaW5jcmVtZW50KCArKyApIGFuZCBzZWxmLWRlY3JlbWVudCggLS0gKS4NClRoZXNlIGNhbiBiZSByZWdhcmRlZCBhcyBzcGVjaWFsIGFzc2lnbm1lbnQgb3BlcmF0b3IsIHVzaW5nIGZvciBhZGRpbmcgb3Igc3VidHJhY3RpbmcgIDEgZm9yIHRoZQ0KdmFyaWFibGUuIEluIGFkZGl0aW9uLCB0aGUgaW5jcmVtZW50IChkZWNyZW1lbnQpIG9wZXJhdG9ycyBjYW4gb25seSBiZSB1c2VkIGFzIHRoZSBwb3N0Zml4DQpvcGVyYXRvcnMsIGFuZCBjYW4gb25seSBiZSBhcHBsaWVkIHRvIG51bWVyaWMgdmFyaWFibGVzLCBhcyB0aGUgdmFsdWVzIG9mIG51bWVyaWMgY29uc3RhbnRzIGFuZA0KbnVtZXJpYyBsaXRlcmFscyBjYW5ub3QgYmUgbW9kaWZpZWQuIEZvciBkZXRhaWxzIGFib3V0IHRoZSBzZWxmLWluY3JlbWVudCAoZGVjcmVtZW50KSBvcGVyYXRpb25zLA0Kc2VlIENoYXB0ZXIgNC4gVGhlIGZvbGxvd2luZyBhcmUgZXhhbXBsZXMgb2Ygc2VsZi1pbmNyZW1lbnQgKGRlY3JlbWVudCkgb3BlcmF0aW9ucyBvbiBpbnRlZ2Vycy4="
    var opt = fromBase64String(str)
    var res = matchResult<Array<UInt8>>(opt, Array<UInt8>())
    if (res[0] == 50 && res[1] == 46 && res[res.size - 2] == 115 && res[res.size - 1] == 46) {
        return 0
    }
    return 1
}
