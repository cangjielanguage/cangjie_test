/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 2
// EXEC: %compiler %import-cangjie-stdx %cmp_opt %stdx-package  %f -o %output
// RUN-EXEC: %run_stdx %output %run_args

import stdx.encoding.json.stream.*
import stdx.encoding.json.*
import std.fs.*
import std.collection.*
import std.io.{ByteBuffer, readToEnd}

var v = HashMap<String, ArrayList<String>>()

main(): Int64 {
    v.add("organizationId", ArrayList<String>())
    v.add("lastUpdateDateTo", ArrayList<String>())
    v.add("pageNumber", ArrayList(["1"]))
    v.add("lastUpdateDateFrom", ArrayList<String>())
    v.add(
        "itemNumbers",
        ArrayList<String>(
            [
                "02670076",
                "02670084",
                "02670085",
                "02670086",
                "02670088",
                "02670089",
                "02670089=",
                "02670092",
                "02670093",
                "02670095",
                "02670096",
                "02700001",
                "02700001=",
                "02700002",
                "02700002=",
                "02700003=",
                "02700007",
                "02700008",
                "02700008-001",
                "02700009",
                "02700010",
                "02700012",
                "02700012-001",
                "02700013",
                "02700013-001",
                "02700014",
                "02700014-001",
                "02700017",
                "02700018",
                "02700020",
                "02700022",
                "02700023",
                "02700024",
                "02700025",
                "02700026",
                "02700027",
                "02700028",
                "02700029",
                "02700030=",
                "02700033",
                "02700033-001",
                "02700034",
                "02700034-001",
                "02700048",
                "02700048-001",
                "02700048-001=",
                "02700048-002",
                "02700048-002=",
                "02700048-003",
                "02700048-003=",
                "02700049",
                "02700049-001",
                "02700049-001=",
                "02700049-002",
                "02700049-005",
                "02700053",
                "02700054",
                "02700055",
                "02700055=",
                "02700056",
                "02700056=",
                "02700058",
                "02700058=",
                "02700059",
                "02700060=",
                "02700062",
                "02700070",
                "02700070=",
                "02700071",
                "02700073",
                "02700073=",
                "02700074",
                "02700074=",
                "02700075",
                "02700075=",
                "02700076",
                "02700076=",
                "02700077",
                "02700077=",
                "02700078",
                "02700079",
                "02700079=",
                "02700080",
                "02700081",
                "02700082",
                "02700084=",
                "02700085",
                "02700089=",
                "02700090=",
                "02700093",
                "02700093=",
                "02700095",
                "02700098",
                "02700099",
                "02700099=",
                "02700101",
                "02700101=",
                "02700102",
                "02700102=",
                "02700105",
                "02700101",
                "02700101=",
                "02700102",
                "02700102=",
                "02700105"
            ]
        )
    )
    v.add("crossReferenceType",
        ArrayList(

    v.add("pageSize", ArrayList(["101"]))
    v.add(
        "itemCodeList",
        ArrayList<String>(
            [
                "02670076",
                "02670084",
                "02670085",
                "02670086",
                "02670088",
                "02670089",
                "02670089=",
                "02670092",
                "02670093",
                "02670095",
                "02670096",
                "02700001",
                "02700001=",
                "02700002",
                "02700002=",
                "02700003=",
                "02700007",
                "02700008",
                "02700008-001",
                "02700009",
                "02700010",
                "02700012",
                "02700012-001",
                "02700013",
                "02700013-001",
                "02700014",
                "02700014-001",
                "02700017",
                "02700018",
                "02700020",
                "02700022",
                "02700023",
                "02700024",
                "02700025",
                "02700026",
                "02700027",
                "02700028",
                "02700029",
                "02700030=",
                "02700033",
                "02700033-001",
                "02700034",
                "02700034-001",
                "02700048",
                "02700048-001",
                "02700048-001=",
                "02700048-002",
                "02700048-002=",
                "02700048-003",
                "02700048-003=",
                "02700049",
                "02700049-001",
                "02700049-001=",
                "02700049-002",
                "02700049-005",
                "02700053",
                "02700054",
                "02700055",
                "02700055=",
                "02700056",
                "02700056=",
                "02700058",
                "02700058=",
                "02700059",
                "02700060=",
                "02700062",
                "02700070",
                "02700070=",
                "02700071",
                "02700073",
                "02700073=",
                "02700074",
                "02700074=",
                "02700075",
                "02700075=",
                "02700076",
                "02700076=",
                "02700077",
                "02700077=",
                "02700078",
                "02700079",
                "02700079=",
                "02700080",
                "02700081",
                "02700082",
                "02700084=",
                "02700085",
                "02700089=",
                "02700090=",
                "02700093",
                "02700093=",
                "02700095",
                "02700098",
                "02700099",
                "02700099=",
                "02700101",
                "02700101=",
                "02700102",
                "02700102=",
                "02700105",
                "02700098",
                "02700099",
                "02700099=",
                "02700101",
                "02700101=",
                "02700102",
                "02700102=",
                "02700105"
            ]
        )
    )
    v.add("languageCode", ArrayList<String>())
    v.add("enableFlag", ArrayList(["Y"]))
    v.add("crossReferenceValueList", ArrayList<String>())
    var query = HashMap<String, ArrayList<String>>()
    var request = HashMap<String, ArrayList<String>>()
    request.add("service", ArrayList(["serviceService"]))
    request.add("method", ArrayList(["invokeServiceConnectionByAssetId"]))
    let stream = ByteBuffer()
    let writer = JsonWriter(stream)
    writer.writeValue<HashMap<String, ArrayList<String>>>(request)
    writer.flush()
    let a = String.fromUtf8(readToEnd(stream))
    return 0
}
