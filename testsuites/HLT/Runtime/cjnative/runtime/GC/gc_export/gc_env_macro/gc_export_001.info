/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 2
// DEPENDENCE: test.cj define.cj
// EXEC: %compiler %cmp_macro define.cj
// (not Windows) EXEC: echo %export cjHeapSize=1GB > gc_export_001.sh
// (not Windows) EXEC: echo %export cjRegionSize=2048KB >> gc_export_001.sh
// (not Windows) EXEC: echo %export cjExemptionThreshold=0.60 >> gc_export_001.sh
// (not Windows) EXEC: echo %export cjHeapUtilization=0.60 >> gc_export_001.sh
// (not Windows) EXEC: echo %export cjHeapGrowth=0.60 >> gc_export_001.sh
// (not Windows) EXEC: echo %export cjAllocationRate=1 >> gc_export_001.sh
// (not Windows) EXEC: echo %export cjAllocationWaitTime=10ns >> gc_export_001.sh
// (not Windows) EXEC: echo %export cjGCThreshold=1KB >> gc_export_001.sh
// (not Windows) EXEC: echo %export cjGarbageThreshold=1.01 >> gc_export_001.sh
// (not Windows) EXEC: echo %export cjGCInterval=1 >> gc_export_001.sh
// (not Windows) EXEC: echo %export cjBackupGCInterval=1 >> gc_export_001.sh
// (not Windows) EXEC: echo %export cjProcessorNum=1 >> gc_export_001.sh
// (not Windows) EXEC: echo %export cjStackSize=1GB >> gc_export_001.sh

// (Windows) EXEC: echo set cjHeapSize=1GB > gc_export_001.sh
// (Windows) EXEC: echo set cjRegionSize=2048KB >> gc_export_001.sh
// (Windows) EXEC: echo set cjExemptionThreshold=0.60 >> gc_export_001.sh
// (Windows) EXEC: echo set cjHeapUtilization=0.60 >> gc_export_001.sh
// (Windows) EXEC: echo set cjHeapGrowth=0.60 >> gc_export_001.sh
// (Windows) EXEC: echo set cjAllocationRate=1 >> gc_export_001.sh
// (Windows) EXEC: echo set cjAllocationWaitTime=10ns >> gc_export_001.sh
// (Windows) EXEC: echo set cjGCThreshold=1KB >> gc_export_001.sh
// (Windows) EXEC: echo set cjGarbageThreshold=1.01 >> gc_export_001.sh
// (Windows) EXEC: echo set cjGCInterval=1 >> gc_export_001.sh
// (Windows) EXEC: echo set cjBackupGCInterval=1 >> gc_export_001.sh
// (Windows) EXEC: echo set cjProcessorNum=1 >> gc_export_001.sh
// (Windows) EXEC: echo set cjStackSize=1GB >> gc_export_001.sh

// (not Windows) EXEC: %export MRT_REPORT=./log.txt && %source gc_export_001.sh && %run_macro %compiler %cmp_opt %macro_lib test.cj -o %output && cat log.txt | compare %f
// (Windows) EXEC: ren gc_export_001.sh gc_export_001.bat
// (Windows) EXEC: set MRT_REPORT=./log.txt && gc_export_001.bat && %run_macro %compiler %cmp_opt %macro_lib test.cj -o %output && cat log.txt | compare %f
// ASSERT:scan Heap size: 1048576(KB)
// ASSERT:scan Region size: 64(KB)
// ASSERT:scan Exemption threshold: 0.80
// ASSERT:scan Heap utilization: 0.60
// ASSERT:scan Heap growth: 1.15
// ASSERT:scan Allocation rate: 10240.00(MB/s)
// ASSERT:scan Allocation wait time: 1000ns
// ASSERT:scan GC Threshold: 20(KB)
// ASSERT:scan Garbage threshold: 0.50
// ASSERT:scan GC interval: 150ms
// ASSERT:scan Backup GC interval: 240s
// ASSERT:scan Processor number: 24
// ASSERT:scan Cangjie stack size: 1048576(KB)
