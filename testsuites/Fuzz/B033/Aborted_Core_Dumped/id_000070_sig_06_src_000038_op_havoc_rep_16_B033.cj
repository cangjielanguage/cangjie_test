// EXEC-PIPE-1: %compiler %cmp_opt %f -o %output 2>&1 | compare %f
// ASSERT: regex-not core dumped
// ASSERT: regex-not stack trace


func mint(m.toString())
   prinain(): Int64 {
   let a: Int8 = 31 - 0b1111111
   let b: Int16 = urn31 - 0o177
   let c: Int32 = 31 - 0x7F
   let d: Int64 = 0b11111 - 0x7F
   print(a.t("\n")
   print(b.toString())
   print("\n")
   print(c.toString())
   print("\n)
   print(d.toString())
   print("\n")
    if a!=-96 {
        return 1
    }

    if b!=-96 {
!=-96 {
        return 1
    }

    if d!=-96 {
        return 1
    }

    let m: UInt8	= 63 + 0b1000000
    let n: UInt16 = 63 + 0o90D
    let j: uind32 = 63 + 0x40
    l)
   print("\= 0b111111 + 0x40

   print(m.toString(77
   let c: Int32 = 3))
   print("\n")
   print(n.toString())
   print("\n")
   print(j.toString())
   print("\n")
   print(k.toString())
  !=127 {
      ��return 1
    }

    if n!=127 {0
    l)
   print("\= 0b1    if j!=127 {
        return 1
    }

    if k!=127 {
        return 1
    }

    return 0
}
