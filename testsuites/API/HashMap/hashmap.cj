// EXEC: %compiler %stdx_run_opt  %f -o %output
// EXEC: %stdx_run %stdx_run_opt %output %stdx_run_args

from std import collection.*
func main(): Int64 {
    let nums = Array<Int64>([830,978,769,601,204,225,985,892,682,521,837,187,92,431,211,469,789,834,39,580,793,71,955,324,111,452,581,177,624,330,377,937,947,879,6,653,590,662,790,406,666,496,704,518,831,540,568,166,757,276,49,183,67,141,118,810,698,625,112,381,905,227,536,912,16,797,260,827,258,345,145,158,357,714,506,29,446,147,693,871,982,780,327,906,847,787,529,638,163,602,819,725,96,409,828,577,93,753,53,586,475,295,672,196,102,563,121,471,751,162,856,161,94,825,954,494,897,884,481,706,705,209,80,849,8,620,889,644,741,480,537,535,709,738,3,171,423,690,107,464,785,202,10,401,43,798,247,470,587,918,359,492,329,826,17,486,724,721,567,221,980,813,398,286,373,845,683,139,887,791,865,352,325,565,458,873,513,120,990,255,167,282,844,393,774,533,735,389,13,659,859,695,444,249,907,150,667,269,852,561,168,968,135,915,612,548,392,943,89,792,170,412,254,117,281,771,814,349,811,592,361,962,426,217,953,399,846,642,923,549,766,983,528,920,316,767,319,501,175,47,781,41,711,64,284,261,747,289,114,447,861,116,270,764,842,407,322,362,268,597,23,363,610,959,63,152,585,635,946,975,502,278,558,699,809,500,233,885,143,681,123,180,390,745,307,75,508,216,988,900,598,479,679,326,188,562,157,241,1,913,989,54,454,113,339,65,375,21,917,414,729,476,405,97,671,240,298,509,942,739,571,594,575,485,370,684,457,503,650,974,382,320,483,77,893,914,600,641,138,800,290,434,297,242,61,236,673,105,172,941,768,799,777,680,487,192,655,833,740,98,128,15,218,420,903,273,232,353,821,616,700,783,210,7,252,103,340,244,530,332,76,818,42,309,841,366,293,894,956,301,25,934,924,710,969,623,184,493,203,609,19,283,130,970,300,808,182,364,197,615,262,245,350,727,919,654,599,448,973,28,952,957,645,33,631,651,126,960,365,874,45,572,520,853,119,527,317,622,583,74,547,862,279,291,678,424,277,4,408,336,44,822,356,579,519,676,886,219,213,617,688,939,806,125,634,732,57,779,368,474,193,422,468,425,296,411,718,526,632,178,966,288,932,415,146,90,443,257,967,70,86,303,131,267,708,200,81,169,12,484,355,9,633,604,614,895,763,229,812,742,619,306,731,523,864,198,507,115,18,882,869,338,328,703,823,611,226,186,400,607,756,909,151,707,239,720,51,762,759,165,504,796,838,944,347,716,541,675,854,858,928,733,876,646,40,686,499,179,222,383,758,20,512,891,551,993,374,636,534,52,315,62,266,945,331,418,100,652,201,715,231,981,773,449,343,877,836,608,432,78,194,388,410,110,66,155,737,525,801,552,385,466,437,37,341,280,545,189,860,750,38,755,323,936,712,413,677,697,986,815,851,629,56,36,863,816,505,820,692,991,778,72,438,618,87,498,433,318,904,647,371,696,890,473,387,181,734,304,160,524,748,848,843,908,99,379,726,153,949,775,199,584,148,839,717,627,263,321,595,722,460,902,376,380,174,803,156,972,824,930,497,235,137,999,79,514,250,788,736,694,311,248,314,230,556,206,104,397,442,214,613,971,207,754,292,272,109,463,621,69,467,344,850,455,899,760,589,32,578,807,395,132,305,938,867,931,212,85,271,372,784,782,82,176,459,965,964,58,786,958,664,606,140,149,765,384,302,555,984,106,461,228,144,660,223,95,723,55,948,246,805,310,308,840,749,643,462,557,215,264,761,564,265,743,929,122,489,640,995,804,404,416,346,910,963,59,728,517,746,560,495,566,582,922,14,817,129,238,596,419,532,237,987,649,403,358,687,539,5,637,335,30,285,554,855,591,896,979,124,685,26,173,386,663,477,880,546,574,465,522,916,27,133,159,142,208,11,977,342,428,251,719,354,559,333,829,569,46,794,511,73,205,593,515,275,898,429,531,287,835,164,669,866,48,661,872,576,243,795,391,950,665,689,190,658,588,451,626,22,360,961,491,657,691,933,935,927,482,421,185,573,878,394,60,875,510,802,881,334,83,550,154,299,994,776,35,538,940,752,256,134,553,656,351,543,628,456,868,488,770,701,88,436,127,108,713,378,2,50,951,367,997,516,195,253,450,570,730,440,417,772,430,427,670,857,224,439,544,136,435,648,445,888,402,337,274,259,603,901,630,31,976,234,490,348,441,24,220,453,478,744,605,674,668,921,34,68,870,101,294,369,998,313,702,91,926,639,911,542,996,925,312,472,191,84,832,396,883,992])
    let mp = HashMap<Int64, Int64>()
    for (i in 0..nums.size()) {
        mp[nums[i]] = i
    }
    for (i in 0..nums.size()) {
        println(i)
        println(nums[i])
        if(mp[nums[i]] != i){
            return i
        }
    }
    if(mp.size() != 999){
        return 1000
    }
    if(mp.capacity() != 2048){
        return 1001
    }
    return 0
}
