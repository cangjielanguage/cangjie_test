
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

/*
  @Name:        A_01_01_a02_04

  @Level:         1
  @Assertion:   A.1.1(2)
                LineComment
                    : '//' ~[\u000A\u000D]*
                    ;
  @Description: Check line comment syntax
  @Comment:     Auto-generated tests by gen_comments_tests_a02.py with seed = 1
  @Mode:        run
  @Negative:    no
  @Structure:   single
*/
import utils.assert.Assert

//4.4.1.1 Constant Patterns A interface class D<:I { override since xneeds to store (val :T):Unit // Annotations The classified into the evaluation of the type instance member properties to use the type of generic function is a generic type, or a Tuplecannot be caught here" ) Moreover, 1.The type is used. let castOP9 =base3 isBase // decimal point), and source text The conversion from Object class C3<T><:I2<T >&I2<Int32 >{}//

main() { //Fmeet the function is '(Int32, Int32)' ↪ // result: 8 UInt64 = cube(x) error: redeclaration of some situations, if the same type, e.aismutable ifemutable and start with integer or more operators or more catch blocks and
  var t1: Int64 = 123 //"npms": { // ... 𝜕𝑦 𝜕𝑥𝑛⎞⎟⎟⎟⎟⎟ ⎠=⎛⎜⎜⎜⎜⎜ ⎝𝜕𝑎1 𝜕𝑥1𝜕𝑎2 𝜕𝑥1...𝜕𝑎𝑘 𝜕𝑥𝑛⎞⎟⎟ ⎠ Where the same as follows. throwExpression : MultiLineStringQuote? '"""' ; LSHIFT: '<<' | thisSuperExpression | LE | Dec | INT16 | 39 | '..' ) For macros can ; t1 = 321
  Assert.equals(123, t1)
  return 0
}

//add(i:Int64 ,j:Int64 ):Int64 {a} The wildcard pattern and the return this is C1 implementation is a multi-line strings. let r3=f1?(1) // Error, n is not only if the following rules for type to omit thisfrom accessing elements is defined in class-related case None =>None } var z: Int64
