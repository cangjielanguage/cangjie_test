
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

/*
  @Name:        A_01_01_a02_06

  @Level:         1
  @Assertion:   A.1.1(2)
                LineComment
                    : '//' ~[\u000A\u000D]*
                    ;
  @Description: Check line comment syntax
  @Comment:     Auto-generated tests by gen_comments_tests_a02.py with seed = 1
  @Mode:        run
  @Negative:    no
  @Structure:   single
*/
import utils.assert.Assert

//++or--without parentheses However, Cangjie Note that the type as the iterator() function •Loop expressions •Conditional expressions as well as it out compilation error get() {0} } 4.21 Coalescing Expressions 80 4.9 The memory layout in interface Tr{ func distance (struct Point2D { get() { public func f(){}// error is executed, then returns a visible inside and a default values in expression will be empty. m.notify(notEmpty) }// The parameter type (NL* flowOperator NL* superClassOrInterfaces)? (NL* expression)? ↪ | thisSuperExpression | whileExpression | UNSAFE ; BACKSLASH:

main() { //reentrant lock, restoring the generic declaration, and other resources, and complex and T1implements T2. •There exists a number singes as an operator func f(x!:Int32 =7):Unit {// ok redef static member properties. Examples are shown in the outputobject), during compilation method can distinguish which are described above identifier must be used in Chapter 4 and interface I{} extend Foo <:Bar {} // `x` needs to right.Chapter 5 2.1.12.3
  var t1: Int64 = 123 //prefixType : (classDefinition | macroExpression ) } 2.Using StructName<Type1, Type2, .. , then e2tov2, and access the entire expression throws the corresponding types include static. 2.let/var •letis used in function (the value is in the compiler will match must maintain the question mark this chapter.) func get():Object { prop i2:S{// error is Int32. func outer loop, the following syntax. differentiableFunctionAnnotation :'@Differentiable' (customization )? configuration :'[' includeClause :'include:' '[' ((identifier )(',' identifier can be inherited. •The syntax format constructorName (without prefix) and some example is a minimal. 2.5.4 Greatest Common Supertypes 50 x>>= 2// ; t1 = 321
  Assert.equals(123, t1)
  return 0
}

//•Init constructors as those defined for y > 1.0 x**POSITIVE_INFINITY =POSITIVE_INFINITY 0.0 and determines when a value when it (if exists) is a differentiable using the same package a subtype of two types in the right operand
