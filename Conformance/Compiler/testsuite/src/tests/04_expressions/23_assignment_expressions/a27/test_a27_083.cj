
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

/*
  @Name:        04_23_a27_083

  @Level:         1

  @Assertion:   4.23(27) 3. The return type of the overloaded operator needs to be the same as or a subtype of the left
                operand, i.e., as for a, b, op in the expression a op=b, they need to pass the type check of
                a = a op b.
  @Description: Checks that if overloaded operator | for type Bool with argument type T has 
                return type UInt8, then compound assignment operator |= cannot be
                used with types Bool and T.
  @Mode: compileonly
  @Negative: yes
  @Structure: single
  @CompileWarning: no
  @Comment: Auto-generated by gen.py

*/

extend Bool {
    public operator func |(x : Unit) { 1u8 }
}

main() {
    var a = true
    a |= ()

    return 0
}
