
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

/*
  @Name:        04_23_a27_010

  @Level:         1

  @Assertion:   4.23(27) 3. The return type of the overloaded operator needs to be the same as or a subtype of the left
                operand, i.e., as for a, b, op in the expression a op=b, they need to pass the type check of
                a = a op b.
  @Description: Checks that if overloaded operator op for type UInt64 with argument type T
                has return type UInt64, which is a subtype of UInt64,
                then compound assignment operator op= can be used with types UInt64 and T.
  @Mode: run
  @Negative: no
  @Structure: single
  @CompileWarning: no
  @Comment: Auto-generated by gen.py

*/

extend UInt64 {
    public operator func +(x : Unit) { 1u64 }
    public operator func -(x : Unit) { 1u64 }
    public operator func *(x : Unit) { 1u64 }
    public operator func **(x : Unit) { 1u64 }
    public operator func /(x : Unit) { 1u64 }
    public operator func %(x : Unit) { 1u64 }
    public operator func &(x : Unit) { 1u64 }
    public operator func |(x : Unit) { 1u64 }
    public operator func ^(x : Unit) { 1u64 }
    public operator func <<(x : Unit) { 1u64 }
    public operator func >>(x : Unit) { 1u64 }
}

main() {
    var a = 1u64
    a += ()
    a -= ()
    a *= ()
    a **= ()
    a /= ()
    a %= ()
    a &= ()
    a |= ()
    a ^= ()
    a <<= ()
    a >>= ()

    return 0
}
