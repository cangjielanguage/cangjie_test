
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

/*
  @Name:        04_23_a16_001

  @Level:         1

  @Assertion:   4.23(16) The type and the value of an assignment expression is Unit and (), respectively.
  @Description: Checks that the type and the value of assignment expressions is Unit and (), respectively.
  @Mode: run
  @Negative: no
  @Structure: single
  @CompileWarning: ignore
  @Comment: Auto-generated by gen.py

*/

import utils.assert.Assert

class C {
    let x : Int64
    C(y : Int64) {
        x = y
    }
}

var vInt8 : Int8 = 1
var vInt16 : Int16 = 1
var vInt32 : Int32 = 1
var vInt64 : Int64 = 1
var vIntNative : IntNative = 1
var vUInt8 : UInt8 = 1
var vUInt16 : UInt16 = 1
var vUInt32 : UInt32 = 1
var vUInt64 : UInt64 = 1
var vUIntNative : UIntNative = 1
var vFloat16 : Float16 = 1.0
var vFloat32 : Float32 = 1.0
var vFloat64 : Float64 = 1.0
var vString : String = "1"
var vRune : Rune = '1'
var vBool : Bool = true
var vUnit : Unit = ()
var vTuple : (Int8, Int8) = (1i8, 1i8)
var vArray : Array<Int8> = [1]
var vC : C = C(1)

main() {
    Assert.isTrue((vInt8 = 1) is Unit)
    Assert.isTrue((vInt16 = 1) is Unit)
    Assert.isTrue((vInt32 = 1) is Unit)
    Assert.isTrue((vInt64 = 1) is Unit)
    Assert.isTrue((vIntNative = 1) is Unit)
    Assert.isTrue((vUInt8 = 1) is Unit)
    Assert.isTrue((vUInt16 = 1) is Unit)
    Assert.isTrue((vUInt32 = 1) is Unit)
    Assert.isTrue((vUInt64 = 1) is Unit)
    Assert.isTrue((vUIntNative = 1) is Unit)
    Assert.isTrue((vFloat16 = 1.0) is Unit)
    Assert.isTrue((vFloat32 = 1.0) is Unit)
    Assert.isTrue((vFloat64 = 1.0) is Unit)
    Assert.isTrue((vString = "1") is Unit)
    Assert.isTrue((vRune = '1') is Unit)
    Assert.isTrue((vBool = true) is Unit)
    Assert.isTrue((vUnit = ()) is Unit)
    Assert.isTrue((vTuple = (1i8, 1i8)) is Unit)
    Assert.isTrue((vArray = [1]) is Unit)
    Assert.isTrue((vC = C(1)) is Unit)
    Assert.isTrue((vInt8 += 1) is Unit)
    Assert.isTrue((vInt16 += 1) is Unit)
    Assert.isTrue((vInt32 += 1) is Unit)
    Assert.isTrue((vInt64 += 1) is Unit)
    Assert.isTrue((vIntNative += 1) is Unit)
    Assert.isTrue((vUInt8 += 1) is Unit)
    Assert.isTrue((vUInt16 += 1) is Unit)
    Assert.isTrue((vUInt32 += 1) is Unit)
    Assert.isTrue((vUInt64 += 1) is Unit)
    Assert.isTrue((vUIntNative += 1) is Unit)
    Assert.isTrue((vFloat16 += 1.0) is Unit)
    Assert.isTrue((vFloat32 += 1.0) is Unit)
    Assert.isTrue((vFloat64 += 1.0) is Unit)
    Assert.isTrue((vInt8 -= 1) is Unit)
    Assert.isTrue((vInt16 -= 1) is Unit)
    Assert.isTrue((vInt32 -= 1) is Unit)
    Assert.isTrue((vInt64 -= 1) is Unit)
    Assert.isTrue((vIntNative -= 1) is Unit)
    Assert.isTrue((vUInt8 -= 1) is Unit)
    Assert.isTrue((vUInt16 -= 1) is Unit)
    Assert.isTrue((vUInt32 -= 1) is Unit)
    Assert.isTrue((vUInt64 -= 1) is Unit)
    Assert.isTrue((vUIntNative -= 1) is Unit)
    Assert.isTrue((vFloat16 -= 1.0) is Unit)
    Assert.isTrue((vFloat32 -= 1.0) is Unit)
    Assert.isTrue((vFloat64 -= 1.0) is Unit)
    Assert.isTrue((vInt8 *= 1) is Unit)
    Assert.isTrue((vInt16 *= 1) is Unit)
    Assert.isTrue((vInt32 *= 1) is Unit)
    Assert.isTrue((vInt64 *= 1) is Unit)
    Assert.isTrue((vIntNative *= 1) is Unit)
    Assert.isTrue((vUInt8 *= 1) is Unit)
    Assert.isTrue((vUInt16 *= 1) is Unit)
    Assert.isTrue((vUInt32 *= 1) is Unit)
    Assert.isTrue((vUInt64 *= 1) is Unit)
    Assert.isTrue((vUIntNative *= 1) is Unit)
    Assert.isTrue((vFloat16 *= 1.0) is Unit)
    Assert.isTrue((vFloat32 *= 1.0) is Unit)
    Assert.isTrue((vFloat64 *= 1.0) is Unit)
    Assert.isTrue((vInt8 /= 1) is Unit)
    Assert.isTrue((vInt16 /= 1) is Unit)
    Assert.isTrue((vInt32 /= 1) is Unit)
    Assert.isTrue((vInt64 /= 1) is Unit)
    Assert.isTrue((vIntNative /= 1) is Unit)
    Assert.isTrue((vUInt8 /= 1) is Unit)
    Assert.isTrue((vUInt16 /= 1) is Unit)
    Assert.isTrue((vUInt32 /= 1) is Unit)
    Assert.isTrue((vUInt64 /= 1) is Unit)
    Assert.isTrue((vUIntNative /= 1) is Unit)
    Assert.isTrue((vFloat16 /= 1.0) is Unit)
    Assert.isTrue((vFloat32 /= 1.0) is Unit)
    Assert.isTrue((vFloat64 /= 1.0) is Unit)
    Assert.isTrue((vInt8 %= 1) is Unit)
    Assert.isTrue((vInt16 %= 1) is Unit)
    Assert.isTrue((vInt32 %= 1) is Unit)
    Assert.isTrue((vInt64 %= 1) is Unit)
    Assert.isTrue((vIntNative %= 1) is Unit)
    Assert.isTrue((vUInt8 %= 1) is Unit)
    Assert.isTrue((vUInt16 %= 1) is Unit)
    Assert.isTrue((vUInt32 %= 1) is Unit)
    Assert.isTrue((vUInt64 %= 1) is Unit)
    Assert.isTrue((vUIntNative %= 1) is Unit)
    Assert.isTrue((vBool &&= true) is Unit)
    Assert.isTrue((vBool ||= true) is Unit)
    Assert.isTrue((vInt8 &= 1) is Unit)
    Assert.isTrue((vInt16 &= 1) is Unit)
    Assert.isTrue((vInt32 &= 1) is Unit)
    Assert.isTrue((vInt64 &= 1) is Unit)
    Assert.isTrue((vIntNative &= 1) is Unit)
    Assert.isTrue((vUInt8 &= 1) is Unit)
    Assert.isTrue((vUInt16 &= 1) is Unit)
    Assert.isTrue((vUInt32 &= 1) is Unit)
    Assert.isTrue((vUInt64 &= 1) is Unit)
    Assert.isTrue((vUIntNative &= 1) is Unit)
    Assert.isTrue((vInt8 |= 1) is Unit)
    Assert.isTrue((vInt16 |= 1) is Unit)
    Assert.isTrue((vInt32 |= 1) is Unit)
    Assert.isTrue((vInt64 |= 1) is Unit)
    Assert.isTrue((vIntNative |= 1) is Unit)
    Assert.isTrue((vUInt8 |= 1) is Unit)
    Assert.isTrue((vUInt16 |= 1) is Unit)
    Assert.isTrue((vUInt32 |= 1) is Unit)
    Assert.isTrue((vUInt64 |= 1) is Unit)
    Assert.isTrue((vUIntNative |= 1) is Unit)
    Assert.isTrue((vInt8 ^= 1) is Unit)
    Assert.isTrue((vInt16 ^= 1) is Unit)
    Assert.isTrue((vInt32 ^= 1) is Unit)
    Assert.isTrue((vInt64 ^= 1) is Unit)
    Assert.isTrue((vIntNative ^= 1) is Unit)
    Assert.isTrue((vUInt8 ^= 1) is Unit)
    Assert.isTrue((vUInt16 ^= 1) is Unit)
    Assert.isTrue((vUInt32 ^= 1) is Unit)
    Assert.isTrue((vUInt64 ^= 1) is Unit)
    Assert.isTrue((vUIntNative ^= 1) is Unit)
    Assert.isTrue((vInt8 <<= 1) is Unit)
    Assert.isTrue((vInt16 <<= 1) is Unit)
    Assert.isTrue((vInt32 <<= 1) is Unit)
    Assert.isTrue((vInt64 <<= 1) is Unit)
    Assert.isTrue((vIntNative <<= 1) is Unit)
    Assert.isTrue((vUInt8 <<= 1) is Unit)
    Assert.isTrue((vUInt16 <<= 1) is Unit)
    Assert.isTrue((vUInt32 <<= 1) is Unit)
    Assert.isTrue((vUInt64 <<= 1) is Unit)
    Assert.isTrue((vUIntNative <<= 1) is Unit)
    Assert.isTrue((vInt8 >>= 1) is Unit)
    Assert.isTrue((vInt16 >>= 1) is Unit)
    Assert.isTrue((vInt32 >>= 1) is Unit)
    Assert.isTrue((vInt64 >>= 1) is Unit)
    Assert.isTrue((vIntNative >>= 1) is Unit)
    Assert.isTrue((vUInt8 >>= 1) is Unit)
    Assert.isTrue((vUInt16 >>= 1) is Unit)
    Assert.isTrue((vUInt32 >>= 1) is Unit)
    Assert.isTrue((vUInt64 >>= 1) is Unit)
    Assert.isTrue((vUIntNative >>= 1) is Unit)
    Assert.isTrue((vInt8 = 1) == ())
    Assert.isTrue((vInt16 = 1) == ())
    Assert.isTrue((vInt32 = 1) == ())
    Assert.isTrue((vInt64 = 1) == ())
    Assert.isTrue((vIntNative = 1) == ())
    Assert.isTrue((vUInt8 = 1) == ())
    Assert.isTrue((vUInt16 = 1) == ())
    Assert.isTrue((vUInt32 = 1) == ())
    Assert.isTrue((vUInt64 = 1) == ())
    Assert.isTrue((vUIntNative = 1) == ())
    Assert.isTrue((vFloat16 = 1.0) == ())
    Assert.isTrue((vFloat32 = 1.0) == ())
    Assert.isTrue((vFloat64 = 1.0) == ())
    Assert.isTrue((vString = "1") == ())
    Assert.isTrue((vRune = '1') == ())
    Assert.isTrue((vBool = true) == ())
    Assert.isTrue((vUnit = ()) == ())
    Assert.isTrue((vTuple = (1i8, 1i8)) == ())
    Assert.isTrue((vArray = [1]) == ())
    Assert.isTrue((vC = C(1)) == ())
    Assert.isTrue((vInt8 += 1) == ())
    Assert.isTrue((vInt16 += 1) == ())
    Assert.isTrue((vInt32 += 1) == ())
    Assert.isTrue((vInt64 += 1) == ())
    Assert.isTrue((vIntNative += 1) == ())
    Assert.isTrue((vUInt8 += 1) == ())
    Assert.isTrue((vUInt16 += 1) == ())
    Assert.isTrue((vUInt32 += 1) == ())
    Assert.isTrue((vUInt64 += 1) == ())
    Assert.isTrue((vUIntNative += 1) == ())
    Assert.isTrue((vFloat16 += 1.0) == ())
    Assert.isTrue((vFloat32 += 1.0) == ())
    Assert.isTrue((vFloat64 += 1.0) == ())
    Assert.isTrue((vInt8 -= 1) == ())
    Assert.isTrue((vInt16 -= 1) == ())
    Assert.isTrue((vInt32 -= 1) == ())
    Assert.isTrue((vInt64 -= 1) == ())
    Assert.isTrue((vIntNative -= 1) == ())
    Assert.isTrue((vUInt8 -= 1) == ())
    Assert.isTrue((vUInt16 -= 1) == ())
    Assert.isTrue((vUInt32 -= 1) == ())
    Assert.isTrue((vUInt64 -= 1) == ())
    Assert.isTrue((vUIntNative -= 1) == ())
    Assert.isTrue((vFloat16 -= 1.0) == ())
    Assert.isTrue((vFloat32 -= 1.0) == ())
    Assert.isTrue((vFloat64 -= 1.0) == ())
    Assert.isTrue((vInt8 *= 1) == ())
    Assert.isTrue((vInt16 *= 1) == ())
    Assert.isTrue((vInt32 *= 1) == ())
    Assert.isTrue((vInt64 *= 1) == ())
    Assert.isTrue((vIntNative *= 1) == ())
    Assert.isTrue((vUInt8 *= 1) == ())
    Assert.isTrue((vUInt16 *= 1) == ())
    Assert.isTrue((vUInt32 *= 1) == ())
    Assert.isTrue((vUInt64 *= 1) == ())
    Assert.isTrue((vUIntNative *= 1) == ())
    Assert.isTrue((vFloat16 *= 1.0) == ())
    Assert.isTrue((vFloat32 *= 1.0) == ())
    Assert.isTrue((vFloat64 *= 1.0) == ())
    Assert.isTrue((vInt8 /= 1) == ())
    Assert.isTrue((vInt16 /= 1) == ())
    Assert.isTrue((vInt32 /= 1) == ())
    Assert.isTrue((vInt64 /= 1) == ())
    Assert.isTrue((vIntNative /= 1) == ())
    Assert.isTrue((vUInt8 /= 1) == ())
    Assert.isTrue((vUInt16 /= 1) == ())
    Assert.isTrue((vUInt32 /= 1) == ())
    Assert.isTrue((vUInt64 /= 1) == ())
    Assert.isTrue((vUIntNative /= 1) == ())
    Assert.isTrue((vFloat16 /= 1.0) == ())
    Assert.isTrue((vFloat32 /= 1.0) == ())
    Assert.isTrue((vFloat64 /= 1.0) == ())
    Assert.isTrue((vInt8 %= 1) == ())
    Assert.isTrue((vInt16 %= 1) == ())
    Assert.isTrue((vInt32 %= 1) == ())
    Assert.isTrue((vInt64 %= 1) == ())
    Assert.isTrue((vIntNative %= 1) == ())
    Assert.isTrue((vUInt8 %= 1) == ())
    Assert.isTrue((vUInt16 %= 1) == ())
    Assert.isTrue((vUInt32 %= 1) == ())
    Assert.isTrue((vUInt64 %= 1) == ())
    Assert.isTrue((vUIntNative %= 1) == ())
    Assert.isTrue((vBool &&= true) == ())
    Assert.isTrue((vBool ||= true) == ())
    Assert.isTrue((vInt8 &= 1) == ())
    Assert.isTrue((vInt16 &= 1) == ())
    Assert.isTrue((vInt32 &= 1) == ())
    Assert.isTrue((vInt64 &= 1) == ())
    Assert.isTrue((vIntNative &= 1) == ())
    Assert.isTrue((vUInt8 &= 1) == ())
    Assert.isTrue((vUInt16 &= 1) == ())
    Assert.isTrue((vUInt32 &= 1) == ())
    Assert.isTrue((vUInt64 &= 1) == ())
    Assert.isTrue((vUIntNative &= 1) == ())
    Assert.isTrue((vInt8 |= 1) == ())
    Assert.isTrue((vInt16 |= 1) == ())
    Assert.isTrue((vInt32 |= 1) == ())
    Assert.isTrue((vInt64 |= 1) == ())
    Assert.isTrue((vIntNative |= 1) == ())
    Assert.isTrue((vUInt8 |= 1) == ())
    Assert.isTrue((vUInt16 |= 1) == ())
    Assert.isTrue((vUInt32 |= 1) == ())
    Assert.isTrue((vUInt64 |= 1) == ())
    Assert.isTrue((vUIntNative |= 1) == ())
    Assert.isTrue((vInt8 ^= 1) == ())
    Assert.isTrue((vInt16 ^= 1) == ())
    Assert.isTrue((vInt32 ^= 1) == ())
    Assert.isTrue((vInt64 ^= 1) == ())
    Assert.isTrue((vIntNative ^= 1) == ())
    Assert.isTrue((vUInt8 ^= 1) == ())
    Assert.isTrue((vUInt16 ^= 1) == ())
    Assert.isTrue((vUInt32 ^= 1) == ())
    Assert.isTrue((vUInt64 ^= 1) == ())
    Assert.isTrue((vUIntNative ^= 1) == ())
    Assert.isTrue((vInt8 <<= 1) == ())
    Assert.isTrue((vInt16 <<= 1) == ())
    Assert.isTrue((vInt32 <<= 1) == ())
    Assert.isTrue((vInt64 <<= 1) == ())
    Assert.isTrue((vIntNative <<= 1) == ())
    Assert.isTrue((vUInt8 <<= 1) == ())
    Assert.isTrue((vUInt16 <<= 1) == ())
    Assert.isTrue((vUInt32 <<= 1) == ())
    Assert.isTrue((vUInt64 <<= 1) == ())
    Assert.isTrue((vUIntNative <<= 1) == ())
    Assert.isTrue((vInt8 >>= 1) == ())
    Assert.isTrue((vInt16 >>= 1) == ())
    Assert.isTrue((vInt32 >>= 1) == ())
    Assert.isTrue((vInt64 >>= 1) == ())
    Assert.isTrue((vIntNative >>= 1) == ())
    Assert.isTrue((vUInt8 >>= 1) == ())
    Assert.isTrue((vUInt16 >>= 1) == ())
    Assert.isTrue((vUInt32 >>= 1) == ())
    Assert.isTrue((vUInt64 >>= 1) == ())
    Assert.isTrue((vUIntNative >>= 1) == ())
    return 0
}
