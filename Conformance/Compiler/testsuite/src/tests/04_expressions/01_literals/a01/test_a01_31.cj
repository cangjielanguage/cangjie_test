
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

/*
  @Name:        04_01_a01_31

  @Level:         1

  @Assertion:   4.1(1) A literal is an expression with a fixed syntax. 
                For literals that contain no other expressions internally (see
                section 1.3 Literals for details), their value is the literals
                themselves, and their type can be determined by their syntax 
                (for numeric type literals, the type is determined by the 
                program context).
  @Description: Checks that integer and byte array literals have proper type.
  @Mode: run
  @Negative: no
  @Structure: single
  @CompileWarning: no

*/

import utils.assert.Assert

class C {}

main() {
    Assert.isFalse(1 is Int8)
    Assert.isFalse(1 is Int16)
    Assert.isFalse(1 is Int32)
    Assert.isTrue(1 is Int64)
    Assert.isFalse(1 is UInt8)
    Assert.isFalse(1 is UInt16)
    Assert.isFalse(1 is UInt32)
    Assert.isFalse(1 is UInt64)
    Assert.isFalse(1 is Float16)
    Assert.isFalse(1 is Float32)
    Assert.isFalse(1 is Float64)
    Assert.isFalse(1 is Rune)
    Assert.isFalse(1 is String)
    Assert.isFalse(1 is Array<Int64>)
    Assert.isFalse(1 is Unit)
    Assert.isFalse(1 is () -> Unit)
    Assert.isFalse(1 is C)

    Assert.isTrue(4i8 is Int8)
    Assert.isFalse(4i8 is Int16)
    Assert.isFalse(4i8 is Int32)
    Assert.isFalse(4i8 is Int64)
    Assert.isFalse(4i8 is UInt8)
    Assert.isFalse(4i8 is UInt16)
    Assert.isFalse(4i8 is UInt32)
    Assert.isFalse(4i8 is UInt64)
    Assert.isFalse(4i8 is Float16)
    Assert.isFalse(4i8 is Float32)
    Assert.isFalse(4i8 is Float64)
    Assert.isFalse(4i8 is Rune)
    Assert.isFalse(4i8 is String)
    Assert.isFalse(4i8 is Array<Int64>)
    Assert.isFalse(4i8 is Unit)
    Assert.isFalse(4i8 is () -> Unit)
    Assert.isFalse(4i8 is C)

    Assert.isFalse(4i16 is Int8)
    Assert.isTrue(4i16 is Int16)
    Assert.isFalse(4i16 is Int32)
    Assert.isFalse(4i16 is Int64)
    Assert.isFalse(4i16 is UInt8)
    Assert.isFalse(4i16 is UInt16)
    Assert.isFalse(4i16 is UInt32)
    Assert.isFalse(4i16 is UInt64)
    Assert.isFalse(4i16 is Float16)
    Assert.isFalse(4i16 is Float32)
    Assert.isFalse(4i16 is Float64)
    Assert.isFalse(4i16 is Rune)
    Assert.isFalse(4i16 is String)
    Assert.isFalse(4i16 is Array<Int64>)
    Assert.isFalse(4i16 is Unit)
    Assert.isFalse(4i16 is () -> Unit)
    Assert.isFalse(4i16 is C)

    Assert.isFalse(4i32 is Int8)
    Assert.isFalse(4i32 is Int16)
    Assert.isTrue(4i32 is Int32)
    Assert.isFalse(4i32 is Int64)
    Assert.isFalse(4i32 is UInt8)
    Assert.isFalse(4i32 is UInt16)
    Assert.isFalse(4i32 is UInt32)
    Assert.isFalse(4i32 is UInt64)
    Assert.isFalse(4i32 is Rune)
    Assert.isFalse(4i32 is Float16)
    Assert.isFalse(4i32 is Float32)
    Assert.isFalse(4i32 is Float64)
    Assert.isFalse(4i32 is String)
    Assert.isFalse(4i32 is Array<Int64>)
    Assert.isFalse(4i32 is Unit)
    Assert.isFalse(4i32 is () -> Unit)
    Assert.isFalse(4i32 is C)

    Assert.isFalse(4i64 is Int8)
    Assert.isFalse(4i64 is Int16)
    Assert.isFalse(4i64 is Int32)
    Assert.isTrue(4i64 is Int64)
    Assert.isFalse(4i64 is UInt8)
    Assert.isFalse(4i64 is UInt16)
    Assert.isFalse(4i64 is UInt32)
    Assert.isFalse(4i64 is UInt64)
    Assert.isFalse(4i64 is Float16)
    Assert.isFalse(4i64 is Float32)
    Assert.isFalse(4i64 is Float64)
    Assert.isFalse(4i64 is Rune)
    Assert.isFalse(4i64 is String)
    Assert.isFalse(4i64 is Array<Int64>)
    Assert.isFalse(4i64 is Unit)
    Assert.isFalse(4i64 is () -> Unit)
    Assert.isFalse(4i64 is C)

    Assert.isFalse(4u8 is Int8)
    Assert.isFalse(4u8 is Int16)
    Assert.isFalse(4u8 is Int32)
    Assert.isFalse(4u8 is Int64)
    Assert.isTrue(4u8 is UInt8)
    Assert.isFalse(4u8 is UInt16)
    Assert.isFalse(4u8 is UInt32)
    Assert.isFalse(4u8 is UInt64)
    Assert.isFalse(4u8 is Float16)
    Assert.isFalse(4u8 is Float32)
    Assert.isFalse(4u8 is Float64)
    Assert.isFalse(4u8 is Rune)
    Assert.isFalse(4u8 is String)
    Assert.isFalse(4u8 is Array<Int64>)
    Assert.isFalse(4u8 is Unit)
    Assert.isFalse(4u8 is () -> Unit)
    Assert.isFalse(4u8 is C)

    Assert.isFalse(4u16 is Int8)
    Assert.isFalse(4u16 is Int16)
    Assert.isFalse(4u16 is Int32)
    Assert.isFalse(4u16 is Int64)
    Assert.isFalse(4u16 is UInt8)
    Assert.isTrue(4u16 is UInt16)
    Assert.isFalse(4u16 is UInt32)
    Assert.isFalse(4u16 is UInt64)
    Assert.isFalse(4u16 is Float16)
    Assert.isFalse(4u16 is Float32)
    Assert.isFalse(4u16 is Float64)
    Assert.isFalse(4u16 is Rune)
    Assert.isFalse(4u16 is String)
    Assert.isFalse(4u16 is Array<Int64>)
    Assert.isFalse(4u16 is Unit)
    Assert.isFalse(4u16 is () -> Unit)
    Assert.isFalse(4u16 is C)

    Assert.isFalse(4u32 is Int8)
    Assert.isFalse(4u32 is Int16)
    Assert.isFalse(4u32 is Int32)
    Assert.isFalse(4u32 is Int64)
    Assert.isFalse(4u32 is UInt8)
    Assert.isFalse(4u32 is UInt16)
    Assert.isTrue(4u32 is UInt32)
    Assert.isFalse(4u32 is UInt64)
    Assert.isFalse(4u32 is Float16)
    Assert.isFalse(4u32 is Float32)
    Assert.isFalse(4u32 is Float64)
    Assert.isFalse(4u32 is Rune)
    Assert.isFalse(4u32 is String)
    Assert.isFalse(4u32 is Array<Int64>)
    Assert.isFalse(4u32 is Unit)
    Assert.isFalse(4u32 is () -> Unit)
    Assert.isFalse(4u32 is C)

    Assert.isFalse(64u64 is Int8)
    Assert.isFalse(64u64 is Int16)
    Assert.isFalse(64u64 is Int32)
    Assert.isFalse(64u64 is Int64)
    Assert.isFalse(64u64 is UInt8)
    Assert.isFalse(64u64 is UInt16)
    Assert.isFalse(64u64 is UInt32)
    Assert.isTrue(64u64 is UInt64)
    Assert.isFalse(64u64 is Float16)
    Assert.isFalse(64u64 is Float32)
    Assert.isFalse(64u64 is Float64)
    Assert.isFalse(4u64 is Rune)
    Assert.isFalse(64u64 is String)
    Assert.isFalse(64u64 is Array<Int64>)
    Assert.isFalse(64u64 is Unit)
    Assert.isFalse(64u64 is () -> Unit)
    Assert.isFalse(64u64 is C)

    Assert.isFalse(0b000100 is Int8)
    Assert.isFalse(0b000101 is Int16)
    Assert.isFalse(0b000101 is Int32)
    Assert.isTrue(0b000101 is Int64)
    Assert.isFalse(0b000101 is UInt8)
    Assert.isFalse(0b000101 is UInt16)
    Assert.isFalse(0b000101 is UInt32)
    Assert.isFalse(0b000101 is UInt64)
    Assert.isFalse(0b000101 is Float16)
    Assert.isFalse(0b000101 is Float32)
    Assert.isFalse(0b000101 is Float64)
    Assert.isFalse(0b000101 is Rune)
    Assert.isFalse(0b000101 is String)
    Assert.isFalse(0b000101 is Array<Int64>)
    Assert.isFalse(0b000101 is Unit)
    Assert.isFalse(0b000101 is () -> Unit)
    Assert.isFalse(0b000101 is C)

    Assert.isFalse(0b000101i32 is Int8)
    Assert.isFalse(0b000101i32 is Int16)
    Assert.isTrue(0b000101i32 is Int32)
    Assert.isFalse(0b000101i32 is Int64)
    Assert.isFalse(0b000101i32 is UInt8)
    Assert.isFalse(0b000101i32 is UInt16)
    Assert.isFalse(0b000101i32 is UInt32)
    Assert.isFalse(0b000101i32 is UInt64)
    Assert.isFalse(0b000101i32 is Float16)
    Assert.isFalse(0b000101i32 is Float32)
    Assert.isFalse(0b000101i32 is Float64)
    Assert.isFalse(0b000101i32 is Rune)
    Assert.isFalse(0b000101i32 is String)
    Assert.isFalse(0b000101i32 is Array<Int64>)
    Assert.isFalse(0b000101i32 is Unit)
    Assert.isFalse(0b000101i32 is () -> Unit)
    Assert.isFalse(0b000101i32 is C)

    Assert.isFalse(0b000101u16 is Int8)
    Assert.isFalse(0b000101u16 is Int16)
    Assert.isFalse(0b000101u16 is Int32)
    Assert.isFalse(0b000101u16 is Int64)
    Assert.isFalse(0b000101u16 is UInt8)
    Assert.isTrue(0b000101u16 is UInt16)
    Assert.isFalse(0b000101u16 is UInt32)
    Assert.isFalse(0b000101u16 is UInt64)
    Assert.isFalse(0b000101u16 is Float16)
    Assert.isFalse(0b000101u16 is Float32)
    Assert.isFalse(0b000101u16 is Float64)
    Assert.isFalse(0b000101u16 is Rune)
    Assert.isFalse(0b000101u16 is String)
    Assert.isFalse(0b000101u16 is Array<Int64>)
    Assert.isFalse(0b000101u16 is Unit)
    Assert.isFalse(0b000101u16 is () -> Unit)
    Assert.isFalse(0b000101u16 is C)

    Assert.isFalse(0x10101010 is Int8)
    Assert.isFalse(0x10101010 is Int16)
    Assert.isFalse(0x10101010 is Int32)
    Assert.isTrue(0x10101010 is Int64)
    Assert.isFalse(0x10101010 is UInt8)
    Assert.isFalse(0x10101010 is UInt16)
    Assert.isFalse(0x10101010 is UInt32)
    Assert.isFalse(0x10101010 is UInt64)
    Assert.isFalse(0x10101010 is Float16)
    Assert.isFalse(0x10101010 is Float32)
    Assert.isFalse(0x10101010 is Float64)
    Assert.isFalse(0x10101010 is Rune)
    Assert.isFalse(0x10101010 is String)
    Assert.isFalse(0x10101010 is Array<Int64>)
    Assert.isFalse(0x10101010 is Unit)
    Assert.isFalse(0x10101010 is () -> Unit)
    Assert.isFalse(0x10101010 is C)

    Assert.isFalse(0x10101010i32 is Int8)
    Assert.isFalse(0x10101010i32 is Int16)
    Assert.isTrue(0x10101010i32 is Int32)
    Assert.isFalse(0x10101010i32 is Int64)
    Assert.isFalse(0x10101010i32 is UInt8)
    Assert.isFalse(0x10101010i32 is UInt16)
    Assert.isFalse(0x10101010i32 is UInt32)
    Assert.isFalse(0x10101010i32 is UInt64)
    Assert.isFalse(0x10101010i32 is Float16)
    Assert.isFalse(0x10101010i32 is Float32)
    Assert.isFalse(0x10101010i32 is Float64)
    Assert.isFalse(0x10101010i32 is Rune)
    Assert.isFalse(0x10101010i32 is String)
    Assert.isFalse(0x10101010i32 is Array<Int64>)
    Assert.isFalse(0x10101010i32 is Unit)
    Assert.isFalse(0x10101010i32 is () -> Unit)
    Assert.isFalse(0x10101010i32 is C)

    Assert.isFalse(0x10101010u64 is Int8)
    Assert.isFalse(0x10101010u64 is Int16)
    Assert.isFalse(0x10101010u64 is Int32)
    Assert.isFalse(0x10101010u64 is Int64)
    Assert.isFalse(0x10101010u64 is UInt8)
    Assert.isFalse(0x10101010u64 is UInt16)
    Assert.isFalse(0x10101010u64 is UInt32)
    Assert.isTrue(0x10101010u64 is UInt64)
    Assert.isFalse(0x10101010u64 is Float16)
    Assert.isFalse(0x10101010u64 is Float32)
    Assert.isFalse(0x10101010u64 is Float64)
    Assert.isFalse(0x10101010u64 is Rune)
    Assert.isFalse(0x10101010u64 is String)
    Assert.isFalse(0x10101010u64 is Array<Int64>)
    Assert.isFalse(0x10101010u64 is Unit)
    Assert.isFalse(0x10101010u64 is () -> Unit)
    Assert.isFalse(0x10101010u64 is C)

    Assert.isFalse(0o10101010 is Int8)
    Assert.isFalse(0o10101010 is Int16)
    Assert.isFalse(0o10101010 is Int32)
    Assert.isTrue(0o10101010 is Int64)
    Assert.isFalse(0o10101010 is UInt8)
    Assert.isFalse(0o10101010 is UInt16)
    Assert.isFalse(0o10101010 is UInt32)
    Assert.isFalse(0o10101010 is UInt64)
    Assert.isFalse(0o10101010 is Float16)
    Assert.isFalse(0o10101010 is Float32)
    Assert.isFalse(0o10101010 is Float64)
    Assert.isFalse(0x10101010 is Rune)
    Assert.isFalse(0o10101010 is String)
    Assert.isFalse(0o10101010 is Array<Int64>)
    Assert.isFalse(0o10101010 is Unit)
    Assert.isFalse(0o10101010 is () -> Unit)
    Assert.isFalse(0o10101010 is C)

    Assert.isFalse(b'N' is Int8)
    Assert.isFalse(b'N' is Int16)
    Assert.isFalse(b'N' is Int32)
    Assert.isFalse(b'N' is Int64)
    Assert.isTrue(b'N' is UInt8)
    Assert.isFalse(b'N' is UInt16)
    Assert.isFalse(b'N' is UInt32)
    Assert.isFalse(b'N' is UInt64)
    Assert.isFalse(b'N' is Float16)
    Assert.isFalse(b'N' is Float32)
    Assert.isFalse(b'N' is Float64)
    Assert.isFalse(b'N' is Rune)
    Assert.isFalse(b'N' is String)
    Assert.isFalse(b'N' is Array<Int64>)
    Assert.isFalse(b'N' is Unit)
    Assert.isFalse(b'N' is () -> Unit)
    Assert.isFalse(b'N' is C)

    Assert.isFalse(b'1' is Int8)
    Assert.isFalse(b'1' is Int16)
    Assert.isFalse(b'1' is Int32)
    Assert.isFalse(b'1' is Int64)
    Assert.isTrue(b'1' is UInt8)
    Assert.isFalse(b'1' is UInt16)
    Assert.isFalse(b'1' is UInt32)
    Assert.isFalse(b'1' is UInt64)
    Assert.isFalse(b'1' is Float16)
    Assert.isFalse(b'1' is Float32)
    Assert.isFalse(b'1' is Float64)
    Assert.isFalse(b'1' is Rune)
    Assert.isFalse(b'1' is String)
    Assert.isFalse(b'1' is Array<Int64>)
    Assert.isFalse(b'1' is Unit)
    Assert.isFalse(b'1' is () -> Unit)
    Assert.isFalse(b'1' is C)
}
