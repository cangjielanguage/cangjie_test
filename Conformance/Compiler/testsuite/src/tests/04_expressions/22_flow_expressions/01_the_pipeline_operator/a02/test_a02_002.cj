
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

/*
  @Name:        04_22_01_a02_002

  @Level:         1

  @Assertion:   4.22.1(2) Here, e2 is the expression of the function type. The type of e1 matches the parameter type of
                e2. Or the type of e2 implements the operator () overloading, (see Operators that can be Overloaded),
                i.e. e1 |> e2 is the syntactic sugar of let v = e1; e2(v) and e2(v) is the function call overloading.
                See section 4.13.2 for details.
  @Description: Checks that using operator |> with types T1 and (T1) -> T2 is permitted for various T1 and T2.
  @Mode: run
  @Negative: no
  @Structure: single
  @CompileWarning: ignore
  @Comment: Auto-generated by gen.py

*/

class C {}

func fInt8Int8(x : Int8) : Int8 { 1 }

func fInt8Int16(x : Int8) : Int16 { 1 }

func fInt8Int32(x : Int8) : Int32 { 1 }

func fInt8Int64(x : Int8) : Int64 { 1 }

func fInt8IntNative(x : Int8) : IntNative { 1 }

func fInt8UInt8(x : Int8) : UInt8 { 1 }

func fInt8UInt16(x : Int8) : UInt16 { 1 }

func fInt8UInt32(x : Int8) : UInt32 { 1 }

func fInt8UInt64(x : Int8) : UInt64 { 1 }

func fInt8UIntNative(x : Int8) : UIntNative { 1 }

func fInt8Float16(x : Int8) : Float16 { 1.0 }

func fInt8Float32(x : Int8) : Float32 { 1.0 }

func fInt8Float64(x : Int8) : Float64 { 1.0 }

func fInt8String(x : Int8) : String { "1" }

func fInt8Char(x : Int8) : Rune { r'1' }

func fInt8Bool(x : Int8) : Bool { true }

func fInt8Unit(x : Int8) : Unit { () }

func fInt8Tuple(x : Int8) : (Int8, Int8) { (1, 1) }

func fInt8Array(x : Int8) : Array<Int8> { [1] }

func fInt8C(x : Int8) : C { C() }

func fInt16Int8(x : Int16) : Int8 { 1 }

func fInt16Int16(x : Int16) : Int16 { 1 }

func fInt16Int32(x : Int16) : Int32 { 1 }

func fInt16Int64(x : Int16) : Int64 { 1 }

func fInt16IntNative(x : Int16) : IntNative { 1 }

func fInt16UInt8(x : Int16) : UInt8 { 1 }

func fInt16UInt16(x : Int16) : UInt16 { 1 }

func fInt16UInt32(x : Int16) : UInt32 { 1 }

func fInt16UInt64(x : Int16) : UInt64 { 1 }

func fInt16UIntNative(x : Int16) : UIntNative { 1 }

func fInt16Float16(x : Int16) : Float16 { 1.0 }

func fInt16Float32(x : Int16) : Float32 { 1.0 }

func fInt16Float64(x : Int16) : Float64 { 1.0 }

func fInt16String(x : Int16) : String { "1" }

func fInt16Char(x : Int16) : Rune { r'1' }

func fInt16Bool(x : Int16) : Bool { true }

func fInt16Unit(x : Int16) : Unit { () }

func fInt16Tuple(x : Int16) : (Int8, Int8) { (1, 1) }

func fInt16Array(x : Int16) : Array<Int8> { [1] }

func fInt16C(x : Int16) : C { C() }

func fInt32Int8(x : Int32) : Int8 { 1 }

func fInt32Int16(x : Int32) : Int16 { 1 }

func fInt32Int32(x : Int32) : Int32 { 1 }

func fInt32Int64(x : Int32) : Int64 { 1 }

func fInt32IntNative(x : Int32) : IntNative { 1 }

func fInt32UInt8(x : Int32) : UInt8 { 1 }

func fInt32UInt16(x : Int32) : UInt16 { 1 }

func fInt32UInt32(x : Int32) : UInt32 { 1 }

func fInt32UInt64(x : Int32) : UInt64 { 1 }

func fInt32UIntNative(x : Int32) : UIntNative { 1 }

func fInt32Float16(x : Int32) : Float16 { 1.0 }

func fInt32Float32(x : Int32) : Float32 { 1.0 }

func fInt32Float64(x : Int32) : Float64 { 1.0 }

func fInt32String(x : Int32) : String { "1" }

func fInt32Char(x : Int32) : Rune { r'1' }

func fInt32Bool(x : Int32) : Bool { true }

func fInt32Unit(x : Int32) : Unit { () }

func fInt32Tuple(x : Int32) : (Int8, Int8) { (1, 1) }

func fInt32Array(x : Int32) : Array<Int8> { [1] }

func fInt32C(x : Int32) : C { C() }

func fInt64Int8(x : Int64) : Int8 { 1 }

func fInt64Int16(x : Int64) : Int16 { 1 }

func fInt64Int32(x : Int64) : Int32 { 1 }

func fInt64Int64(x : Int64) : Int64 { 1 }

func fInt64IntNative(x : Int64) : IntNative { 1 }

func fInt64UInt8(x : Int64) : UInt8 { 1 }

func fInt64UInt16(x : Int64) : UInt16 { 1 }

func fInt64UInt32(x : Int64) : UInt32 { 1 }

func fInt64UInt64(x : Int64) : UInt64 { 1 }

func fInt64UIntNative(x : Int64) : UIntNative { 1 }

func fInt64Float16(x : Int64) : Float16 { 1.0 }

func fInt64Float32(x : Int64) : Float32 { 1.0 }

func fInt64Float64(x : Int64) : Float64 { 1.0 }

func fInt64String(x : Int64) : String { "1" }

func fInt64Char(x : Int64) : Rune { r'1' }

func fInt64Bool(x : Int64) : Bool { true }

func fInt64Unit(x : Int64) : Unit { () }

func fInt64Tuple(x : Int64) : (Int8, Int8) { (1, 1) }

func fInt64Array(x : Int64) : Array<Int8> { [1] }

func fInt64C(x : Int64) : C { C() }

func fIntNativeInt8(x : IntNative) : Int8 { 1 }

func fIntNativeInt16(x : IntNative) : Int16 { 1 }

func fIntNativeInt32(x : IntNative) : Int32 { 1 }

func fIntNativeInt64(x : IntNative) : Int64 { 1 }

func fIntNativeIntNative(x : IntNative) : IntNative { 1 }

func fIntNativeUInt8(x : IntNative) : UInt8 { 1 }

func fIntNativeUInt16(x : IntNative) : UInt16 { 1 }

func fIntNativeUInt32(x : IntNative) : UInt32 { 1 }

func fIntNativeUInt64(x : IntNative) : UInt64 { 1 }

func fIntNativeUIntNative(x : IntNative) : UIntNative { 1 }

func fIntNativeFloat16(x : IntNative) : Float16 { 1.0 }

func fIntNativeFloat32(x : IntNative) : Float32 { 1.0 }

func fIntNativeFloat64(x : IntNative) : Float64 { 1.0 }

func fIntNativeString(x : IntNative) : String { "1" }

func fIntNativeChar(x : IntNative) : Rune { r'1' }

func fIntNativeBool(x : IntNative) : Bool { true }

func fIntNativeUnit(x : IntNative) : Unit { () }

func fIntNativeTuple(x : IntNative) : (Int8, Int8) { (1, 1) }

func fIntNativeArray(x : IntNative) : Array<Int8> { [1] }

func fIntNativeC(x : IntNative) : C { C() }

func fUInt8Int8(x : UInt8) : Int8 { 1 }

func fUInt8Int16(x : UInt8) : Int16 { 1 }

func fUInt8Int32(x : UInt8) : Int32 { 1 }

func fUInt8Int64(x : UInt8) : Int64 { 1 }

func fUInt8IntNative(x : UInt8) : IntNative { 1 }

func fUInt8UInt8(x : UInt8) : UInt8 { 1 }

func fUInt8UInt16(x : UInt8) : UInt16 { 1 }

func fUInt8UInt32(x : UInt8) : UInt32 { 1 }

func fUInt8UInt64(x : UInt8) : UInt64 { 1 }

func fUInt8UIntNative(x : UInt8) : UIntNative { 1 }

func fUInt8Float16(x : UInt8) : Float16 { 1.0 }

func fUInt8Float32(x : UInt8) : Float32 { 1.0 }

func fUInt8Float64(x : UInt8) : Float64 { 1.0 }

func fUInt8String(x : UInt8) : String { "1" }

func fUInt8Char(x : UInt8) : Rune { r'1' }

func fUInt8Bool(x : UInt8) : Bool { true }

func fUInt8Unit(x : UInt8) : Unit { () }

func fUInt8Tuple(x : UInt8) : (Int8, Int8) { (1, 1) }

func fUInt8Array(x : UInt8) : Array<Int8> { [1] }

func fUInt8C(x : UInt8) : C { C() }

func fUInt16Int8(x : UInt16) : Int8 { 1 }

func fUInt16Int16(x : UInt16) : Int16 { 1 }

func fUInt16Int32(x : UInt16) : Int32 { 1 }

func fUInt16Int64(x : UInt16) : Int64 { 1 }

func fUInt16IntNative(x : UInt16) : IntNative { 1 }

func fUInt16UInt8(x : UInt16) : UInt8 { 1 }

func fUInt16UInt16(x : UInt16) : UInt16 { 1 }

func fUInt16UInt32(x : UInt16) : UInt32 { 1 }

func fUInt16UInt64(x : UInt16) : UInt64 { 1 }

func fUInt16UIntNative(x : UInt16) : UIntNative { 1 }

func fUInt16Float16(x : UInt16) : Float16 { 1.0 }

func fUInt16Float32(x : UInt16) : Float32 { 1.0 }

func fUInt16Float64(x : UInt16) : Float64 { 1.0 }

func fUInt16String(x : UInt16) : String { "1" }

func fUInt16Char(x : UInt16) : Rune { r'1' }

func fUInt16Bool(x : UInt16) : Bool { true }

func fUInt16Unit(x : UInt16) : Unit { () }

func fUInt16Tuple(x : UInt16) : (Int8, Int8) { (1, 1) }

func fUInt16Array(x : UInt16) : Array<Int8> { [1] }

func fUInt16C(x : UInt16) : C { C() }

func fUInt32Int8(x : UInt32) : Int8 { 1 }

func fUInt32Int16(x : UInt32) : Int16 { 1 }

func fUInt32Int32(x : UInt32) : Int32 { 1 }

func fUInt32Int64(x : UInt32) : Int64 { 1 }

func fUInt32IntNative(x : UInt32) : IntNative { 1 }

func fUInt32UInt8(x : UInt32) : UInt8 { 1 }

func fUInt32UInt16(x : UInt32) : UInt16 { 1 }

func fUInt32UInt32(x : UInt32) : UInt32 { 1 }

func fUInt32UInt64(x : UInt32) : UInt64 { 1 }

func fUInt32UIntNative(x : UInt32) : UIntNative { 1 }

func fUInt32Float16(x : UInt32) : Float16 { 1.0 }

func fUInt32Float32(x : UInt32) : Float32 { 1.0 }

func fUInt32Float64(x : UInt32) : Float64 { 1.0 }

func fUInt32String(x : UInt32) : String { "1" }

func fUInt32Char(x : UInt32) : Rune { r'1' }

func fUInt32Bool(x : UInt32) : Bool { true }

func fUInt32Unit(x : UInt32) : Unit { () }

func fUInt32Tuple(x : UInt32) : (Int8, Int8) { (1, 1) }

func fUInt32Array(x : UInt32) : Array<Int8> { [1] }

func fUInt32C(x : UInt32) : C { C() }

func fUInt64Int8(x : UInt64) : Int8 { 1 }

func fUInt64Int16(x : UInt64) : Int16 { 1 }

func fUInt64Int32(x : UInt64) : Int32 { 1 }

func fUInt64Int64(x : UInt64) : Int64 { 1 }

func fUInt64IntNative(x : UInt64) : IntNative { 1 }

func fUInt64UInt8(x : UInt64) : UInt8 { 1 }

func fUInt64UInt16(x : UInt64) : UInt16 { 1 }

func fUInt64UInt32(x : UInt64) : UInt32 { 1 }

func fUInt64UInt64(x : UInt64) : UInt64 { 1 }

func fUInt64UIntNative(x : UInt64) : UIntNative { 1 }

func fUInt64Float16(x : UInt64) : Float16 { 1.0 }

func fUInt64Float32(x : UInt64) : Float32 { 1.0 }

func fUInt64Float64(x : UInt64) : Float64 { 1.0 }

func fUInt64String(x : UInt64) : String { "1" }

func fUInt64Char(x : UInt64) : Rune { r'1' }

func fUInt64Bool(x : UInt64) : Bool { true }

func fUInt64Unit(x : UInt64) : Unit { () }

func fUInt64Tuple(x : UInt64) : (Int8, Int8) { (1, 1) }

func fUInt64Array(x : UInt64) : Array<Int8> { [1] }

func fUInt64C(x : UInt64) : C { C() }

func fUIntNativeInt8(x : UIntNative) : Int8 { 1 }

func fUIntNativeInt16(x : UIntNative) : Int16 { 1 }

func fUIntNativeInt32(x : UIntNative) : Int32 { 1 }

func fUIntNativeInt64(x : UIntNative) : Int64 { 1 }

func fUIntNativeIntNative(x : UIntNative) : IntNative { 1 }

func fUIntNativeUInt8(x : UIntNative) : UInt8 { 1 }

func fUIntNativeUInt16(x : UIntNative) : UInt16 { 1 }

func fUIntNativeUInt32(x : UIntNative) : UInt32 { 1 }

func fUIntNativeUInt64(x : UIntNative) : UInt64 { 1 }

func fUIntNativeUIntNative(x : UIntNative) : UIntNative { 1 }

func fUIntNativeFloat16(x : UIntNative) : Float16 { 1.0 }

func fUIntNativeFloat32(x : UIntNative) : Float32 { 1.0 }

func fUIntNativeFloat64(x : UIntNative) : Float64 { 1.0 }

func fUIntNativeString(x : UIntNative) : String { "1" }

func fUIntNativeChar(x : UIntNative) : Rune { r'1' }

func fUIntNativeBool(x : UIntNative) : Bool { true }

func fUIntNativeUnit(x : UIntNative) : Unit { () }

func fUIntNativeTuple(x : UIntNative) : (Int8, Int8) { (1, 1) }

func fUIntNativeArray(x : UIntNative) : Array<Int8> { [1] }

func fUIntNativeC(x : UIntNative) : C { C() }

func fFloat16Int8(x : Float16) : Int8 { 1 }

func fFloat16Int16(x : Float16) : Int16 { 1 }

func fFloat16Int32(x : Float16) : Int32 { 1 }

func fFloat16Int64(x : Float16) : Int64 { 1 }

func fFloat16IntNative(x : Float16) : IntNative { 1 }

func fFloat16UInt8(x : Float16) : UInt8 { 1 }

func fFloat16UInt16(x : Float16) : UInt16 { 1 }

func fFloat16UInt32(x : Float16) : UInt32 { 1 }

func fFloat16UInt64(x : Float16) : UInt64 { 1 }

func fFloat16UIntNative(x : Float16) : UIntNative { 1 }

func fFloat16Float16(x : Float16) : Float16 { 1.0 }

func fFloat16Float32(x : Float16) : Float32 { 1.0 }

func fFloat16Float64(x : Float16) : Float64 { 1.0 }

func fFloat16String(x : Float16) : String { "1" }

func fFloat16Char(x : Float16) : Rune { r'1' }

func fFloat16Bool(x : Float16) : Bool { true }

func fFloat16Unit(x : Float16) : Unit { () }

func fFloat16Tuple(x : Float16) : (Int8, Int8) { (1, 1) }

func fFloat16Array(x : Float16) : Array<Int8> { [1] }

func fFloat16C(x : Float16) : C { C() }

func fFloat32Int8(x : Float32) : Int8 { 1 }

func fFloat32Int16(x : Float32) : Int16 { 1 }

func fFloat32Int32(x : Float32) : Int32 { 1 }

func fFloat32Int64(x : Float32) : Int64 { 1 }

func fFloat32IntNative(x : Float32) : IntNative { 1 }

func fFloat32UInt8(x : Float32) : UInt8 { 1 }

func fFloat32UInt16(x : Float32) : UInt16 { 1 }

func fFloat32UInt32(x : Float32) : UInt32 { 1 }

func fFloat32UInt64(x : Float32) : UInt64 { 1 }

func fFloat32UIntNative(x : Float32) : UIntNative { 1 }

func fFloat32Float16(x : Float32) : Float16 { 1.0 }

func fFloat32Float32(x : Float32) : Float32 { 1.0 }

func fFloat32Float64(x : Float32) : Float64 { 1.0 }

func fFloat32String(x : Float32) : String { "1" }

func fFloat32Char(x : Float32) : Rune { r'1' }

func fFloat32Bool(x : Float32) : Bool { true }

func fFloat32Unit(x : Float32) : Unit { () }

func fFloat32Tuple(x : Float32) : (Int8, Int8) { (1, 1) }

func fFloat32Array(x : Float32) : Array<Int8> { [1] }

func fFloat32C(x : Float32) : C { C() }

func fFloat64Int8(x : Float64) : Int8 { 1 }

func fFloat64Int16(x : Float64) : Int16 { 1 }

func fFloat64Int32(x : Float64) : Int32 { 1 }

func fFloat64Int64(x : Float64) : Int64 { 1 }

func fFloat64IntNative(x : Float64) : IntNative { 1 }

func fFloat64UInt8(x : Float64) : UInt8 { 1 }

func fFloat64UInt16(x : Float64) : UInt16 { 1 }

func fFloat64UInt32(x : Float64) : UInt32 { 1 }

func fFloat64UInt64(x : Float64) : UInt64 { 1 }

func fFloat64UIntNative(x : Float64) : UIntNative { 1 }

func fFloat64Float16(x : Float64) : Float16 { 1.0 }

func fFloat64Float32(x : Float64) : Float32 { 1.0 }

func fFloat64Float64(x : Float64) : Float64 { 1.0 }

func fFloat64String(x : Float64) : String { "1" }

func fFloat64Char(x : Float64) : Rune { r'1' }

func fFloat64Bool(x : Float64) : Bool { true }

func fFloat64Unit(x : Float64) : Unit { () }

func fFloat64Tuple(x : Float64) : (Int8, Int8) { (1, 1) }

func fFloat64Array(x : Float64) : Array<Int8> { [1] }

func fFloat64C(x : Float64) : C { C() }

func fStringInt8(x : String) : Int8 { 1 }

func fStringInt16(x : String) : Int16 { 1 }

func fStringInt32(x : String) : Int32 { 1 }

func fStringInt64(x : String) : Int64 { 1 }

func fStringIntNative(x : String) : IntNative { 1 }

func fStringUInt8(x : String) : UInt8 { 1 }

func fStringUInt16(x : String) : UInt16 { 1 }

func fStringUInt32(x : String) : UInt32 { 1 }

func fStringUInt64(x : String) : UInt64 { 1 }

func fStringUIntNative(x : String) : UIntNative { 1 }

func fStringFloat16(x : String) : Float16 { 1.0 }

func fStringFloat32(x : String) : Float32 { 1.0 }

func fStringFloat64(x : String) : Float64 { 1.0 }

func fStringString(x : String) : String { "1" }

func fStringChar(x : String) : Rune { r'1' }

func fStringBool(x : String) : Bool { true }

func fStringUnit(x : String) : Unit { () }

func fStringTuple(x : String) : (Int8, Int8) { (1, 1) }

func fStringArray(x : String) : Array<Int8> { [1] }

func fStringC(x : String) : C { C() }

func fCharInt8(x : Rune) : Int8 { 1 }

func fCharInt16(x : Rune) : Int16 { 1 }

func fCharInt32(x : Rune) : Int32 { 1 }

func fCharInt64(x : Rune) : Int64 { 1 }

func fCharIntNative(x : Rune) : IntNative { 1 }

func fCharUInt8(x : Rune) : UInt8 { 1 }

func fCharUInt16(x : Rune) : UInt16 { 1 }

func fCharUInt32(x : Rune) : UInt32 { 1 }

func fCharUInt64(x : Rune) : UInt64 { 1 }

func fCharUIntNative(x : Rune) : UIntNative { 1 }

func fCharFloat16(x : Rune) : Float16 { 1.0 }

func fCharFloat32(x : Rune) : Float32 { 1.0 }

func fCharFloat64(x : Rune) : Float64 { 1.0 }

func fCharString(x : Rune) : String { "1" }

func fCharChar(x : Rune) : Rune { r'1' }

func fCharBool(x : Rune) : Bool { true }

func fCharUnit(x : Rune) : Unit { () }

func fCharTuple(x : Rune) : (Int8, Int8) { (1, 1) }

func fCharArray(x : Rune) : Array<Int8> { [1] }

func fCharC(x : Rune) : C { C() }

func fBoolInt8(x : Bool) : Int8 { 1 }

func fBoolInt16(x : Bool) : Int16 { 1 }

func fBoolInt32(x : Bool) : Int32 { 1 }

func fBoolInt64(x : Bool) : Int64 { 1 }

func fBoolIntNative(x : Bool) : IntNative { 1 }

func fBoolUInt8(x : Bool) : UInt8 { 1 }

func fBoolUInt16(x : Bool) : UInt16 { 1 }

func fBoolUInt32(x : Bool) : UInt32 { 1 }

func fBoolUInt64(x : Bool) : UInt64 { 1 }

func fBoolUIntNative(x : Bool) : UIntNative { 1 }

func fBoolFloat16(x : Bool) : Float16 { 1.0 }

func fBoolFloat32(x : Bool) : Float32 { 1.0 }

func fBoolFloat64(x : Bool) : Float64 { 1.0 }

func fBoolString(x : Bool) : String { "1" }

func fBoolChar(x : Bool) : Rune { r'1' }

func fBoolBool(x : Bool) : Bool { true }

func fBoolUnit(x : Bool) : Unit { () }

func fBoolTuple(x : Bool) : (Int8, Int8) { (1, 1) }

func fBoolArray(x : Bool) : Array<Int8> { [1] }

func fBoolC(x : Bool) : C { C() }

func fUnitInt8(x : Unit) : Int8 { 1 }

func fUnitInt16(x : Unit) : Int16 { 1 }

func fUnitInt32(x : Unit) : Int32 { 1 }

func fUnitInt64(x : Unit) : Int64 { 1 }

func fUnitIntNative(x : Unit) : IntNative { 1 }

func fUnitUInt8(x : Unit) : UInt8 { 1 }

func fUnitUInt16(x : Unit) : UInt16 { 1 }

func fUnitUInt32(x : Unit) : UInt32 { 1 }

func fUnitUInt64(x : Unit) : UInt64 { 1 }

func fUnitUIntNative(x : Unit) : UIntNative { 1 }

func fUnitFloat16(x : Unit) : Float16 { 1.0 }

func fUnitFloat32(x : Unit) : Float32 { 1.0 }

func fUnitFloat64(x : Unit) : Float64 { 1.0 }

func fUnitString(x : Unit) : String { "1" }

func fUnitChar(x : Unit) : Rune { r'1' }

func fUnitBool(x : Unit) : Bool { true }

func fUnitUnit(x : Unit) : Unit { () }

func fUnitTuple(x : Unit) : (Int8, Int8) { (1, 1) }

func fUnitArray(x : Unit) : Array<Int8> { [1] }

func fUnitC(x : Unit) : C { C() }

func fTupleInt8(x : (Int8, Int8)) : Int8 { 1 }

func fTupleInt16(x : (Int8, Int8)) : Int16 { 1 }

func fTupleInt32(x : (Int8, Int8)) : Int32 { 1 }

func fTupleInt64(x : (Int8, Int8)) : Int64 { 1 }

func fTupleIntNative(x : (Int8, Int8)) : IntNative { 1 }

func fTupleUInt8(x : (Int8, Int8)) : UInt8 { 1 }

func fTupleUInt16(x : (Int8, Int8)) : UInt16 { 1 }

func fTupleUInt32(x : (Int8, Int8)) : UInt32 { 1 }

func fTupleUInt64(x : (Int8, Int8)) : UInt64 { 1 }

func fTupleUIntNative(x : (Int8, Int8)) : UIntNative { 1 }

func fTupleFloat16(x : (Int8, Int8)) : Float16 { 1.0 }

func fTupleFloat32(x : (Int8, Int8)) : Float32 { 1.0 }

func fTupleFloat64(x : (Int8, Int8)) : Float64 { 1.0 }

func fTupleString(x : (Int8, Int8)) : String { "1" }

func fTupleChar(x : (Int8, Int8)) : Rune { r'1' }

func fTupleBool(x : (Int8, Int8)) : Bool { true }

func fTupleUnit(x : (Int8, Int8)) : Unit { () }

func fTupleTuple(x : (Int8, Int8)) : (Int8, Int8) { (1, 1) }

func fTupleArray(x : (Int8, Int8)) : Array<Int8> { [1] }

func fTupleC(x : (Int8, Int8)) : C { C() }

func fArrayInt8(x : Array<Int8>) : Int8 { 1 }

func fArrayInt16(x : Array<Int8>) : Int16 { 1 }

func fArrayInt32(x : Array<Int8>) : Int32 { 1 }

func fArrayInt64(x : Array<Int8>) : Int64 { 1 }

func fArrayIntNative(x : Array<Int8>) : IntNative { 1 }

func fArrayUInt8(x : Array<Int8>) : UInt8 { 1 }

func fArrayUInt16(x : Array<Int8>) : UInt16 { 1 }

func fArrayUInt32(x : Array<Int8>) : UInt32 { 1 }

func fArrayUInt64(x : Array<Int8>) : UInt64 { 1 }

func fArrayUIntNative(x : Array<Int8>) : UIntNative { 1 }

func fArrayFloat16(x : Array<Int8>) : Float16 { 1.0 }

func fArrayFloat32(x : Array<Int8>) : Float32 { 1.0 }

func fArrayFloat64(x : Array<Int8>) : Float64 { 1.0 }

func fArrayString(x : Array<Int8>) : String { "1" }

func fArrayChar(x : Array<Int8>) : Rune { r'1' }

func fArrayBool(x : Array<Int8>) : Bool { true }

func fArrayUnit(x : Array<Int8>) : Unit { () }

func fArrayTuple(x : Array<Int8>) : (Int8, Int8) { (1, 1) }

func fArrayArray(x : Array<Int8>) : Array<Int8> { [1] }

func fArrayC(x : Array<Int8>) : C { C() }

func fCInt8(x : C) : Int8 { 1 }

func fCInt16(x : C) : Int16 { 1 }

func fCInt32(x : C) : Int32 { 1 }

func fCInt64(x : C) : Int64 { 1 }

func fCIntNative(x : C) : IntNative { 1 }

func fCUInt8(x : C) : UInt8 { 1 }

func fCUInt16(x : C) : UInt16 { 1 }

func fCUInt32(x : C) : UInt32 { 1 }

func fCUInt64(x : C) : UInt64 { 1 }

func fCUIntNative(x : C) : UIntNative { 1 }

func fCFloat16(x : C) : Float16 { 1.0 }

func fCFloat32(x : C) : Float32 { 1.0 }

func fCFloat64(x : C) : Float64 { 1.0 }

func fCString(x : C) : String { "1" }

func fCChar(x : C) : Rune { r'1' }

func fCBool(x : C) : Bool { true }

func fCUnit(x : C) : Unit { () }

func fCTuple(x : C) : (Int8, Int8) { (1, 1) }

func fCArray(x : C) : Array<Int8> { [1] }

func fCC(x : C) : C { C() }

main() {
    1 |> fInt8Int8
    1 |> fInt8Int16
    1 |> fInt8Int32
    1 |> fInt8Int64
    1 |> fInt8IntNative
    1 |> fInt8UInt8
    1 |> fInt8UInt16
    1 |> fInt8UInt32
    1 |> fInt8UInt64
    1 |> fInt8UIntNative
    1 |> fInt8Float16
    1 |> fInt8Float32
    1 |> fInt8Float64
    1 |> fInt8String
    1 |> fInt8Char
    1 |> fInt8Bool
    1 |> fInt8Unit
    1 |> fInt8Tuple
    1 |> fInt8Array
    1 |> fInt8C
    1 |> fInt16Int8
    1 |> fInt16Int16
    1 |> fInt16Int32
    1 |> fInt16Int64
    1 |> fInt16IntNative
    1 |> fInt16UInt8
    1 |> fInt16UInt16
    1 |> fInt16UInt32
    1 |> fInt16UInt64
    1 |> fInt16UIntNative
    1 |> fInt16Float16
    1 |> fInt16Float32
    1 |> fInt16Float64
    1 |> fInt16String
    1 |> fInt16Char
    1 |> fInt16Bool
    1 |> fInt16Unit
    1 |> fInt16Tuple
    1 |> fInt16Array
    1 |> fInt16C
    1 |> fInt32Int8
    1 |> fInt32Int16
    1 |> fInt32Int32
    1 |> fInt32Int64
    1 |> fInt32IntNative
    1 |> fInt32UInt8
    1 |> fInt32UInt16
    1 |> fInt32UInt32
    1 |> fInt32UInt64
    1 |> fInt32UIntNative
    1 |> fInt32Float16
    1 |> fInt32Float32
    1 |> fInt32Float64
    1 |> fInt32String
    1 |> fInt32Char
    1 |> fInt32Bool
    1 |> fInt32Unit
    1 |> fInt32Tuple
    1 |> fInt32Array
    1 |> fInt32C
    1 |> fInt64Int8
    1 |> fInt64Int16
    1 |> fInt64Int32
    1 |> fInt64Int64
    1 |> fInt64IntNative
    1 |> fInt64UInt8
    1 |> fInt64UInt16
    1 |> fInt64UInt32
    1 |> fInt64UInt64
    1 |> fInt64UIntNative
    1 |> fInt64Float16
    1 |> fInt64Float32
    1 |> fInt64Float64
    1 |> fInt64String
    1 |> fInt64Char
    1 |> fInt64Bool
    1 |> fInt64Unit
    1 |> fInt64Tuple
    1 |> fInt64Array
    1 |> fInt64C
    1 |> fIntNativeInt8
    1 |> fIntNativeInt16
    1 |> fIntNativeInt32
    1 |> fIntNativeInt64
    1 |> fIntNativeIntNative
    1 |> fIntNativeUInt8
    1 |> fIntNativeUInt16
    1 |> fIntNativeUInt32
    1 |> fIntNativeUInt64
    1 |> fIntNativeUIntNative
    1 |> fIntNativeFloat16
    1 |> fIntNativeFloat32
    1 |> fIntNativeFloat64
    1 |> fIntNativeString
    1 |> fIntNativeChar
    1 |> fIntNativeBool
    1 |> fIntNativeUnit
    1 |> fIntNativeTuple
    1 |> fIntNativeArray
    1 |> fIntNativeC
    1 |> fUInt8Int8
    1 |> fUInt8Int16
    1 |> fUInt8Int32
    1 |> fUInt8Int64
    1 |> fUInt8IntNative
    1 |> fUInt8UInt8
    1 |> fUInt8UInt16
    1 |> fUInt8UInt32
    1 |> fUInt8UInt64
    1 |> fUInt8UIntNative
    1 |> fUInt8Float16
    1 |> fUInt8Float32
    1 |> fUInt8Float64
    1 |> fUInt8String
    1 |> fUInt8Char
    1 |> fUInt8Bool
    1 |> fUInt8Unit
    1 |> fUInt8Tuple
    1 |> fUInt8Array
    1 |> fUInt8C
    1 |> fUInt16Int8
    1 |> fUInt16Int16
    1 |> fUInt16Int32
    1 |> fUInt16Int64
    1 |> fUInt16IntNative
    1 |> fUInt16UInt8
    1 |> fUInt16UInt16
    1 |> fUInt16UInt32
    1 |> fUInt16UInt64
    1 |> fUInt16UIntNative
    1 |> fUInt16Float16
    1 |> fUInt16Float32
    1 |> fUInt16Float64
    1 |> fUInt16String
    1 |> fUInt16Char
    1 |> fUInt16Bool
    1 |> fUInt16Unit
    1 |> fUInt16Tuple
    1 |> fUInt16Array
    1 |> fUInt16C
    1 |> fUInt32Int8
    1 |> fUInt32Int16
    1 |> fUInt32Int32
    1 |> fUInt32Int64
    1 |> fUInt32IntNative
    1 |> fUInt32UInt8
    1 |> fUInt32UInt16
    1 |> fUInt32UInt32
    1 |> fUInt32UInt64
    1 |> fUInt32UIntNative
    1 |> fUInt32Float16
    1 |> fUInt32Float32
    1 |> fUInt32Float64
    1 |> fUInt32String
    1 |> fUInt32Char
    1 |> fUInt32Bool
    1 |> fUInt32Unit
    1 |> fUInt32Tuple
    1 |> fUInt32Array
    1 |> fUInt32C
    1 |> fUInt64Int8
    1 |> fUInt64Int16
    1 |> fUInt64Int32
    1 |> fUInt64Int64
    1 |> fUInt64IntNative
    1 |> fUInt64UInt8
    1 |> fUInt64UInt16
    1 |> fUInt64UInt32
    1 |> fUInt64UInt64
    1 |> fUInt64UIntNative
    1 |> fUInt64Float16
    1 |> fUInt64Float32
    1 |> fUInt64Float64
    1 |> fUInt64String
    1 |> fUInt64Char
    1 |> fUInt64Bool
    1 |> fUInt64Unit
    1 |> fUInt64Tuple
    1 |> fUInt64Array
    1 |> fUInt64C
    1 |> fUIntNativeInt8
    1 |> fUIntNativeInt16
    1 |> fUIntNativeInt32
    1 |> fUIntNativeInt64
    1 |> fUIntNativeIntNative
    1 |> fUIntNativeUInt8
    1 |> fUIntNativeUInt16
    1 |> fUIntNativeUInt32
    1 |> fUIntNativeUInt64
    1 |> fUIntNativeUIntNative
    1 |> fUIntNativeFloat16
    1 |> fUIntNativeFloat32
    1 |> fUIntNativeFloat64
    1 |> fUIntNativeString
    1 |> fUIntNativeChar
    1 |> fUIntNativeBool
    1 |> fUIntNativeUnit
    1 |> fUIntNativeTuple
    1 |> fUIntNativeArray
    1 |> fUIntNativeC
    1.0 |> fFloat16Int8
    1.0 |> fFloat16Int16
    1.0 |> fFloat16Int32
    1.0 |> fFloat16Int64
    1.0 |> fFloat16IntNative
    1.0 |> fFloat16UInt8
    1.0 |> fFloat16UInt16
    1.0 |> fFloat16UInt32
    1.0 |> fFloat16UInt64
    1.0 |> fFloat16UIntNative
    1.0 |> fFloat16Float16
    1.0 |> fFloat16Float32
    1.0 |> fFloat16Float64
    1.0 |> fFloat16String
    1.0 |> fFloat16Char
    1.0 |> fFloat16Bool
    1.0 |> fFloat16Unit
    1.0 |> fFloat16Tuple
    1.0 |> fFloat16Array
    1.0 |> fFloat16C
    1.0 |> fFloat32Int8
    1.0 |> fFloat32Int16
    1.0 |> fFloat32Int32
    1.0 |> fFloat32Int64
    1.0 |> fFloat32IntNative
    1.0 |> fFloat32UInt8
    1.0 |> fFloat32UInt16
    1.0 |> fFloat32UInt32
    1.0 |> fFloat32UInt64
    1.0 |> fFloat32UIntNative
    1.0 |> fFloat32Float16
    1.0 |> fFloat32Float32
    1.0 |> fFloat32Float64
    1.0 |> fFloat32String
    1.0 |> fFloat32Char
    1.0 |> fFloat32Bool
    1.0 |> fFloat32Unit
    1.0 |> fFloat32Tuple
    1.0 |> fFloat32Array
    1.0 |> fFloat32C
    1.0 |> fFloat64Int8
    1.0 |> fFloat64Int16
    1.0 |> fFloat64Int32
    1.0 |> fFloat64Int64
    1.0 |> fFloat64IntNative
    1.0 |> fFloat64UInt8
    1.0 |> fFloat64UInt16
    1.0 |> fFloat64UInt32
    1.0 |> fFloat64UInt64
    1.0 |> fFloat64UIntNative
    1.0 |> fFloat64Float16
    1.0 |> fFloat64Float32
    1.0 |> fFloat64Float64
    1.0 |> fFloat64String
    1.0 |> fFloat64Char
    1.0 |> fFloat64Bool
    1.0 |> fFloat64Unit
    1.0 |> fFloat64Tuple
    1.0 |> fFloat64Array
    1.0 |> fFloat64C
    "1" |> fStringInt8
    "1" |> fStringInt16
    "1" |> fStringInt32
    "1" |> fStringInt64
    "1" |> fStringIntNative
    "1" |> fStringUInt8
    "1" |> fStringUInt16
    "1" |> fStringUInt32
    "1" |> fStringUInt64
    "1" |> fStringUIntNative
    "1" |> fStringFloat16
    "1" |> fStringFloat32
    "1" |> fStringFloat64
    "1" |> fStringString
    "1" |> fStringChar
    "1" |> fStringBool
    "1" |> fStringUnit
    "1" |> fStringTuple
    "1" |> fStringArray
    "1" |> fStringC
    r'1' |> fCharInt8
    r'1' |> fCharInt16
    r'1' |> fCharInt32
    r'1' |> fCharInt64
    r'1' |> fCharIntNative
    r'1' |> fCharUInt8
    r'1' |> fCharUInt16
    r'1' |> fCharUInt32
    r'1' |> fCharUInt64
    r'1' |> fCharUIntNative
    r'1' |> fCharFloat16
    r'1' |> fCharFloat32
    r'1' |> fCharFloat64
    r'1' |> fCharString
    r'1' |> fCharChar
    r'1' |> fCharBool
    r'1' |> fCharUnit
    r'1' |> fCharTuple
    r'1' |> fCharArray
    r'1' |> fCharC
    true |> fBoolInt8
    true |> fBoolInt16
    true |> fBoolInt32
    true |> fBoolInt64
    true |> fBoolIntNative
    true |> fBoolUInt8
    true |> fBoolUInt16
    true |> fBoolUInt32
    true |> fBoolUInt64
    true |> fBoolUIntNative
    true |> fBoolFloat16
    true |> fBoolFloat32
    true |> fBoolFloat64
    true |> fBoolString
    true |> fBoolChar
    true |> fBoolBool
    true |> fBoolUnit
    true |> fBoolTuple
    true |> fBoolArray
    true |> fBoolC
    () |> fUnitInt8
    () |> fUnitInt16
    () |> fUnitInt32
    () |> fUnitInt64
    () |> fUnitIntNative
    () |> fUnitUInt8
    () |> fUnitUInt16
    () |> fUnitUInt32
    () |> fUnitUInt64
    () |> fUnitUIntNative
    () |> fUnitFloat16
    () |> fUnitFloat32
    () |> fUnitFloat64
    () |> fUnitString
    () |> fUnitChar
    () |> fUnitBool
    () |> fUnitUnit
    () |> fUnitTuple
    () |> fUnitArray
    () |> fUnitC
    (1, 1) |> fTupleInt8
    (1, 1) |> fTupleInt16
    (1, 1) |> fTupleInt32
    (1, 1) |> fTupleInt64
    (1, 1) |> fTupleIntNative
    (1, 1) |> fTupleUInt8
    (1, 1) |> fTupleUInt16
    (1, 1) |> fTupleUInt32
    (1, 1) |> fTupleUInt64
    (1, 1) |> fTupleUIntNative
    (1, 1) |> fTupleFloat16
    (1, 1) |> fTupleFloat32
    (1, 1) |> fTupleFloat64
    (1, 1) |> fTupleString
    (1, 1) |> fTupleChar
    (1, 1) |> fTupleBool
    (1, 1) |> fTupleUnit
    (1, 1) |> fTupleTuple
    (1, 1) |> fTupleArray
    (1, 1) |> fTupleC
    [1] |> fArrayInt8
    [1] |> fArrayInt16
    [1] |> fArrayInt32
    [1] |> fArrayInt64
    [1] |> fArrayIntNative
    [1] |> fArrayUInt8
    [1] |> fArrayUInt16
    [1] |> fArrayUInt32
    [1] |> fArrayUInt64
    [1] |> fArrayUIntNative
    [1] |> fArrayFloat16
    [1] |> fArrayFloat32
    [1] |> fArrayFloat64
    [1] |> fArrayString
    [1] |> fArrayChar
    [1] |> fArrayBool
    [1] |> fArrayUnit
    [1] |> fArrayTuple
    [1] |> fArrayArray
    [1] |> fArrayC
    C() |> fCInt8
    C() |> fCInt16
    C() |> fCInt32
    C() |> fCInt64
    C() |> fCIntNative
    C() |> fCUInt8
    C() |> fCUInt16
    C() |> fCUInt32
    C() |> fCUInt64
    C() |> fCUIntNative
    C() |> fCFloat16
    C() |> fCFloat32
    C() |> fCFloat64
    C() |> fCString
    C() |> fCChar
    C() |> fCBool
    C() |> fCUnit
    C() |> fCTuple
    C() |> fCArray
    C() |> fCC
    return 0
}
