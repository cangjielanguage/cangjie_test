
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

/*
  @Name:        04_15_a65_52

  @Level:         1

  @Assertion:   4.15(65) The default strategy is the same with @OverflowThrowing.
  @Description: Checks for Int32 a, b that a - b causes an ArithmeticException (upper bound overflow) if
                @OverflowThrowing is used.
  @Mode: run
  @Negative: no
  @Structure: single
  @CompileWarning: no
  @Comment: Auto-generated by gen_exception.py

  @Issue: 0006421

*/

import utils.assert.Assert

@OverflowThrowing
func f(a: Int32, b: Int32) {
    a - b
}

main() {
    let a = 2147483647i32
    let b = -2147483648i32
    var caught : Bool = false
    try {
        f(a, b)
    } catch (e: ArithmeticException) {
        caught = true
    }
    Assert.isTrue(caught)
}
